INFO  20:27:50,951 - Compiling source file: C:\Users\neman\Desktop\PP_projekat\MJCompiler\test\test.mj
INFO  20:27:51,029 - #2 program
INFO  20:27:51,029 - #49 test_303
INFO  20:27:51,029 - #6 const
INFO  20:27:51,030 - #49 int
INFO  20:27:51,030 - #49 cinilac
INFO  20:27:51,032 - #35 =
INFO  20:27:51,032 - #48 4
INFO  20:27:51,032 - #40 ,
INFO  20:27:51,032 - #49 delilac
INFO  20:27:51,032 - #35 =
INFO  20:27:51,032 - #48 3
INFO  20:27:51,033 - #38 ;
INFO  20:27:51,034 - #4 class
INFO  20:27:51,034 - #49 Predmet
INFO  20:27:51,034 - #46 {
INFO  20:27:51,035 - #49 int
INFO  20:27:51,036 - #49 tezina
INFO  20:27:51,036 - #38 ;
INFO  20:27:51,036 - #49 int
INFO  20:27:51,036 - #49 koefTezine
INFO  20:27:51,036 - #38 ;
INFO  20:27:51,037 - #49 char
INFO  20:27:51,037 - #49 vrsta
INFO  20:27:51,037 - #38 ;
INFO  20:27:51,037 - #46 {
INFO  20:27:51,037 - #49 Predmet
INFO  20:27:51,037 - #42 (
INFO  20:27:51,038 - #43 )
INFO  20:27:51,038 - #46 {
INFO  20:27:51,038 - #49 koefTezine
INFO  20:27:51,039 - #35 =
INFO  20:27:51,039 - #48 1
INFO  20:27:51,040 - #38 ;
INFO  20:27:51,040 - #47 }
INFO  20:27:51,041 - #10 void
INFO  20:27:51,041 - #49 postaviTezinu
INFO  20:27:51,041 - #42 (
INFO  20:27:51,042 - #49 int
INFO  20:27:51,042 - #49 tezina
INFO  20:27:51,042 - #43 )
INFO  20:27:51,042 - #46 {
INFO  20:27:51,043 - #12 this
INFO  20:27:51,043 - #41 .
INFO  20:27:51,043 - #49 tezina
INFO  20:27:51,043 - #35 =
INFO  20:27:51,044 - #49 tezina
INFO  20:27:51,044 - #32 *
INFO  20:27:51,044 - #49 koefTezine
INFO  20:27:51,045 - #38 ;
INFO  20:27:51,045 - #47 }
INFO  20:27:51,045 - #10 void
INFO  20:27:51,046 - #49 ucitajTezinu
INFO  20:27:51,046 - #42 (
INFO  20:27:51,046 - #43 )
INFO  20:27:51,046 - #46 {
INFO  20:27:51,046 - #9 read
INFO  20:27:51,046 - #42 (
INFO  20:27:51,046 - #49 tezina
INFO  20:27:51,046 - #43 )
INFO  20:27:51,047 - #38 ;
INFO  20:27:51,047 - #47 }
INFO  20:27:51,047 - #49 int
INFO  20:27:51,047 - #49 zapremina
INFO  20:27:51,047 - #42 (
INFO  20:27:51,047 - #43 )
INFO  20:27:51,047 - #46 {
INFO  20:27:51,047 - #20 return
INFO  20:27:51,047 - #48 0
INFO  20:27:51,047 - #38 ;
INFO  20:27:51,047 - #47 }
INFO  20:27:51,047 - #49 int
INFO  20:27:51,047 - #49 Q
INFO  20:27:51,047 - #42 (
INFO  20:27:51,047 - #43 )
INFO  20:27:51,047 - #46 {
INFO  20:27:51,048 - #20 return
INFO  20:27:51,048 - #49 zapremina
INFO  20:27:51,048 - #42 (
INFO  20:27:51,048 - #43 )
INFO  20:27:51,049 - #32 *
INFO  20:27:51,049 - #49 tezina
INFO  20:27:51,049 - #38 ;
INFO  20:27:51,049 - #47 }
INFO  20:27:51,049 - #10 void
INFO  20:27:51,049 - #49 postaviVrstu
INFO  20:27:51,049 - #42 (
INFO  20:27:51,049 - #49 char
INFO  20:27:51,049 - #49 vrsta
INFO  20:27:51,049 - #43 )
INFO  20:27:51,049 - #46 {
INFO  20:27:51,049 - #12 this
INFO  20:27:51,049 - #41 .
INFO  20:27:51,049 - #49 vrsta
INFO  20:27:51,049 - #35 =
INFO  20:27:51,049 - #49 vrsta
INFO  20:27:51,050 - #38 ;
INFO  20:27:51,050 - #47 }
INFO  20:27:51,050 - #49 char
INFO  20:27:51,050 - #49 dohvVrstu
INFO  20:27:51,050 - #42 (
INFO  20:27:51,050 - #43 )
INFO  20:27:51,050 - #46 {
INFO  20:27:51,050 - #20 return
INFO  20:27:51,050 - #49 vrsta
INFO  20:27:51,050 - #38 ;
INFO  20:27:51,050 - #47 }
INFO  20:27:51,050 - #49 int
INFO  20:27:51,050 - #49 dohvTezinu
INFO  20:27:51,050 - #42 (
INFO  20:27:51,050 - #43 )
INFO  20:27:51,050 - #46 {
INFO  20:27:51,050 - #20 return
INFO  20:27:51,050 - #49 tezina
INFO  20:27:51,050 - #38 ;
INFO  20:27:51,050 - #47 }
INFO  20:27:51,050 - #10 void
INFO  20:27:51,051 - #49 ispisi
INFO  20:27:51,051 - #42 (
INFO  20:27:51,051 - #43 )
INFO  20:27:51,051 - #46 {
INFO  20:27:51,051 - #8 print
INFO  20:27:51,051 - #42 (
INFO  20:27:51,051 - #49 vrsta
INFO  20:27:51,051 - #43 )
INFO  20:27:51,051 - #38 ;
INFO  20:27:51,051 - #8 print
INFO  20:27:51,051 - #42 (
INFO  20:27:51,051 - #49 Q
INFO  20:27:51,051 - #42 (
INFO  20:27:51,051 - #43 )
INFO  20:27:51,051 - #43 )
INFO  20:27:51,051 - #38 ;
INFO  20:27:51,051 - #47 }
INFO  20:27:51,051 - #47 }
INFO  20:27:51,051 - #47 }
INFO  20:27:51,052 - #4 class
INFO  20:27:51,053 - #49 Sfera
INFO  20:27:51,053 - #11 extends
INFO  20:27:51,053 - #49 Predmet
INFO  20:27:51,053 - #46 {
INFO  20:27:51,053 - #49 int
INFO  20:27:51,053 - #49 r
INFO  20:27:51,053 - #38 ;
INFO  20:27:51,053 - #46 {
INFO  20:27:51,053 - #49 Sfera
INFO  20:27:51,053 - #42 (
INFO  20:27:51,053 - #43 )
INFO  20:27:51,053 - #46 {
INFO  20:27:51,053 - #13 super
INFO  20:27:51,053 - #42 (
INFO  20:27:51,054 - #43 )
INFO  20:27:51,054 - #38 ;
INFO  20:27:51,054 - #49 vrsta
INFO  20:27:51,054 - #35 =
INFO  20:27:51,054 - #51 s
INFO  20:27:51,054 - #38 ;
INFO  20:27:51,054 - #47 }
INFO  20:27:51,054 - #10 void
INFO  20:27:51,055 - #49 postaviPoluprecnik
INFO  20:27:51,055 - #42 (
INFO  20:27:51,055 - #49 int
INFO  20:27:51,055 - #49 r
INFO  20:27:51,055 - #43 )
INFO  20:27:51,055 - #46 {
INFO  20:27:51,055 - #12 this
INFO  20:27:51,055 - #41 .
INFO  20:27:51,055 - #49 r
INFO  20:27:51,055 - #35 =
INFO  20:27:51,055 - #49 r
INFO  20:27:51,055 - #38 ;
INFO  20:27:51,055 - #47 }
INFO  20:27:51,055 - #49 int
INFO  20:27:51,055 - #49 zapremina
INFO  20:27:51,055 - #42 (
INFO  20:27:51,055 - #43 )
INFO  20:27:51,055 - #49 int
INFO  20:27:51,055 - #49 z
INFO  20:27:51,055 - #38 ;
INFO  20:27:51,055 - #46 {
INFO  20:27:51,056 - #49 z
INFO  20:27:51,056 - #35 =
INFO  20:27:51,056 - #49 cinilac
INFO  20:27:51,056 - #38 ;
INFO  20:27:51,056 - #20 return
INFO  20:27:51,056 - #49 z
INFO  20:27:51,056 - #32 *
INFO  20:27:51,056 - #42 (
INFO  20:27:51,056 - #49 r
INFO  20:27:51,056 - #33 /
INFO  20:27:51,056 - #49 delilac
INFO  20:27:51,057 - #43 )
INFO  20:27:51,057 - #38 ;
INFO  20:27:51,057 - #47 }
INFO  20:27:51,057 - #10 void
INFO  20:27:51,057 - #49 ispisi
INFO  20:27:51,057 - #42 (
INFO  20:27:51,057 - #43 )
INFO  20:27:51,057 - #46 {
INFO  20:27:51,057 - #13 super
INFO  20:27:51,057 - #42 (
INFO  20:27:51,057 - #43 )
INFO  20:27:51,057 - #38 ;
INFO  20:27:51,057 - #8 print
INFO  20:27:51,057 - #42 (
INFO  20:27:51,057 - #49 r
INFO  20:27:51,057 - #43 )
INFO  20:27:51,057 - #38 ;
INFO  20:27:51,057 - #8 print
INFO  20:27:51,057 - #42 (
INFO  20:27:51,057 - #49 eol
INFO  20:27:51,057 - #43 )
INFO  20:27:51,057 - #38 ;
INFO  20:27:51,057 - #47 }
INFO  20:27:51,057 - #47 }
INFO  20:27:51,057 - #47 }
INFO  20:27:51,057 - #4 class
INFO  20:27:51,057 - #49 Kvadar
INFO  20:27:51,057 - #11 extends
INFO  20:27:51,057 - #49 Predmet
INFO  20:27:51,058 - #46 {
INFO  20:27:51,058 - #49 int
INFO  20:27:51,058 - #49 a
INFO  20:27:51,058 - #40 ,
INFO  20:27:51,058 - #49 b
INFO  20:27:51,058 - #40 ,
INFO  20:27:51,058 - #49 c
INFO  20:27:51,058 - #38 ;
INFO  20:27:51,058 - #46 {
INFO  20:27:51,058 - #49 Kvadar
INFO  20:27:51,058 - #42 (
INFO  20:27:51,058 - #43 )
INFO  20:27:51,058 - #46 {
INFO  20:27:51,058 - #13 super
INFO  20:27:51,058 - #42 (
INFO  20:27:51,058 - #43 )
INFO  20:27:51,058 - #38 ;
INFO  20:27:51,058 - #49 vrsta
INFO  20:27:51,058 - #35 =
INFO  20:27:51,058 - #51 k
INFO  20:27:51,058 - #38 ;
INFO  20:27:51,058 - #47 }
INFO  20:27:51,058 - #10 void
INFO  20:27:51,058 - #49 postaviStranice
INFO  20:27:51,058 - #42 (
INFO  20:27:51,058 - #49 int
INFO  20:27:51,058 - #49 a
INFO  20:27:51,058 - #40 ,
INFO  20:27:51,058 - #49 int
INFO  20:27:51,058 - #49 b
INFO  20:27:51,058 - #40 ,
INFO  20:27:51,059 - #49 int
INFO  20:27:51,059 - #49 c
INFO  20:27:51,059 - #43 )
INFO  20:27:51,059 - #46 {
INFO  20:27:51,059 - #12 this
INFO  20:27:51,059 - #41 .
INFO  20:27:51,059 - #49 a
INFO  20:27:51,059 - #35 =
INFO  20:27:51,059 - #49 a
INFO  20:27:51,059 - #38 ;
INFO  20:27:51,059 - #12 this
INFO  20:27:51,059 - #41 .
INFO  20:27:51,059 - #49 b
INFO  20:27:51,059 - #35 =
INFO  20:27:51,059 - #49 b
INFO  20:27:51,059 - #38 ;
INFO  20:27:51,059 - #12 this
INFO  20:27:51,059 - #41 .
INFO  20:27:51,059 - #49 c
INFO  20:27:51,059 - #35 =
INFO  20:27:51,059 - #49 c
INFO  20:27:51,059 - #38 ;
INFO  20:27:51,059 - #47 }
INFO  20:27:51,059 - #49 int
INFO  20:27:51,060 - #49 zapremina
INFO  20:27:51,060 - #42 (
INFO  20:27:51,060 - #43 )
INFO  20:27:51,060 - #49 int
INFO  20:27:51,060 - #49 z
INFO  20:27:51,060 - #38 ;
INFO  20:27:51,060 - #46 {
INFO  20:27:51,060 - #49 z
INFO  20:27:51,060 - #35 =
INFO  20:27:51,060 - #49 a
INFO  20:27:51,060 - #32 *
INFO  20:27:51,060 - #49 b
INFO  20:27:51,060 - #32 *
INFO  20:27:51,060 - #49 c
INFO  20:27:51,060 - #38 ;
INFO  20:27:51,060 - #20 return
INFO  20:27:51,060 - #49 z
INFO  20:27:51,060 - #38 ;
INFO  20:27:51,060 - #47 }
INFO  20:27:51,060 - #10 void
INFO  20:27:51,060 - #49 ispisi
INFO  20:27:51,060 - #42 (
INFO  20:27:51,060 - #43 )
INFO  20:27:51,060 - #46 {
INFO  20:27:51,060 - #13 super
INFO  20:27:51,060 - #42 (
INFO  20:27:51,060 - #43 )
INFO  20:27:51,060 - #38 ;
INFO  20:27:51,060 - #8 print
INFO  20:27:51,060 - #42 (
INFO  20:27:51,060 - #49 a
INFO  20:27:51,060 - #43 )
INFO  20:27:51,060 - #38 ;
INFO  20:27:51,060 - #8 print
INFO  20:27:51,061 - #42 (
INFO  20:27:51,061 - #49 b
INFO  20:27:51,061 - #43 )
INFO  20:27:51,061 - #38 ;
INFO  20:27:51,061 - #8 print
INFO  20:27:51,061 - #42 (
INFO  20:27:51,061 - #49 c
INFO  20:27:51,061 - #43 )
INFO  20:27:51,061 - #38 ;
INFO  20:27:51,061 - #8 print
INFO  20:27:51,061 - #42 (
INFO  20:27:51,061 - #49 eol
INFO  20:27:51,061 - #43 )
INFO  20:27:51,061 - #38 ;
INFO  20:27:51,061 - #47 }
INFO  20:27:51,061 - #47 }
INFO  20:27:51,061 - #47 }
INFO  20:27:51,061 - #49 int
INFO  20:27:51,061 - #49 zapreminaK
INFO  20:27:51,061 - #40 ,
INFO  20:27:51,061 - #49 zapreminaS
INFO  20:27:51,061 - #38 ;
INFO  20:27:51,061 - #49 int
INFO  20:27:51,061 - #49 tezinaK
INFO  20:27:51,061 - #40 ,
INFO  20:27:51,061 - #49 tezinaS
INFO  20:27:51,061 - #38 ;
INFO  20:27:51,061 - #46 {
INFO  20:27:51,061 - #10 void
INFO  20:27:51,061 - #49 ispis
INFO  20:27:51,061 - #42 (
INFO  20:27:51,061 - #49 Predmet
INFO  20:27:51,062 - #49 p
INFO  20:27:51,062 - #43 )
INFO  20:27:51,062 - #46 {
INFO  20:27:51,062 - #49 p
INFO  20:27:51,062 - #41 .
INFO  20:27:51,065 - #49 ispisi
INFO  20:27:51,065 - #42 (
INFO  20:27:51,065 - #43 )
INFO  20:27:51,065 - #38 ;
INFO  20:27:51,065 - #8 print
INFO  20:27:51,065 - #42 (
INFO  20:27:51,065 - #49 eol
INFO  20:27:51,065 - #43 )
INFO  20:27:51,065 - #38 ;
INFO  20:27:51,065 - #8 print
INFO  20:27:51,065 - #42 (
INFO  20:27:51,065 - #49 p
INFO  20:27:51,065 - #41 .
INFO  20:27:51,065 - #49 dohvTezinu
INFO  20:27:51,065 - #42 (
INFO  20:27:51,065 - #43 )
INFO  20:27:51,065 - #43 )
INFO  20:27:51,065 - #38 ;
INFO  20:27:51,065 - #47 }
INFO  20:27:51,065 - #10 void
INFO  20:27:51,065 - #49 main
INFO  20:27:51,065 - #42 (
INFO  20:27:51,065 - #43 )
INFO  20:27:51,065 - #49 Predmet
INFO  20:27:51,065 - #49 predmeti
INFO  20:27:51,065 - #44 [
INFO  20:27:51,065 - #45 ]
INFO  20:27:51,065 - #38 ;
INFO  20:27:51,065 - #49 int
INFO  20:27:51,065 - #49 i
INFO  20:27:51,066 - #38 ;
INFO  20:27:51,066 - #49 Sfera
INFO  20:27:51,066 - #49 s1
INFO  20:27:51,066 - #40 ,
INFO  20:27:51,066 - #49 s2
INFO  20:27:51,066 - #40 ,
INFO  20:27:51,066 - #49 s3
INFO  20:27:51,066 - #38 ;
INFO  20:27:51,066 - #49 Kvadar
INFO  20:27:51,066 - #49 k1
INFO  20:27:51,066 - #40 ,
INFO  20:27:51,066 - #49 k2
INFO  20:27:51,066 - #40 ,
INFO  20:27:51,066 - #49 k3
INFO  20:27:51,066 - #38 ;
INFO  20:27:51,066 - #49 int
INFO  20:27:51,066 - #49 t
INFO  20:27:51,066 - #38 ;
INFO  20:27:51,066 - #46 {
INFO  20:27:51,066 - #49 predmeti
INFO  20:27:51,066 - #35 =
INFO  20:27:51,066 - #7 new
INFO  20:27:51,066 - #49 Predmet
INFO  20:27:51,066 - #44 [
INFO  20:27:51,066 - #48 6
INFO  20:27:51,066 - #45 ]
INFO  20:27:51,066 - #38 ;
INFO  20:27:51,066 - #49 s1
INFO  20:27:51,066 - #35 =
INFO  20:27:51,066 - #7 new
INFO  20:27:51,066 - #49 Sfera
INFO  20:27:51,066 - #38 ;
INFO  20:27:51,067 - #49 s2
INFO  20:27:51,067 - #35 =
INFO  20:27:51,067 - #7 new
INFO  20:27:51,067 - #49 Sfera
INFO  20:27:51,067 - #38 ;
INFO  20:27:51,067 - #49 s3
INFO  20:27:51,067 - #35 =
INFO  20:27:51,067 - #7 new
INFO  20:27:51,067 - #49 Sfera
INFO  20:27:51,067 - #38 ;
INFO  20:27:51,067 - #49 k1
INFO  20:27:51,067 - #35 =
INFO  20:27:51,067 - #7 new
INFO  20:27:51,067 - #49 Kvadar
INFO  20:27:51,067 - #38 ;
INFO  20:27:51,067 - #49 k2
INFO  20:27:51,067 - #35 =
INFO  20:27:51,067 - #7 new
INFO  20:27:51,067 - #49 Kvadar
INFO  20:27:51,067 - #38 ;
INFO  20:27:51,067 - #49 k3
INFO  20:27:51,067 - #35 =
INFO  20:27:51,067 - #7 new
INFO  20:27:51,067 - #49 Kvadar
INFO  20:27:51,067 - #38 ;
INFO  20:27:51,067 - #49 s1
INFO  20:27:51,067 - #41 .
INFO  20:27:51,067 - #49 postaviPoluprecnik
INFO  20:27:51,067 - #42 (
INFO  20:27:51,067 - #48 1
INFO  20:27:51,068 - #43 )
INFO  20:27:51,068 - #38 ;
INFO  20:27:51,068 - #49 s2
INFO  20:27:51,068 - #41 .
INFO  20:27:51,068 - #49 postaviPoluprecnik
INFO  20:27:51,068 - #42 (
INFO  20:27:51,068 - #48 2
INFO  20:27:51,068 - #43 )
INFO  20:27:51,068 - #38 ;
INFO  20:27:51,068 - #49 s3
INFO  20:27:51,068 - #41 .
INFO  20:27:51,068 - #49 postaviPoluprecnik
INFO  20:27:51,068 - #42 (
INFO  20:27:51,068 - #48 3
INFO  20:27:51,068 - #43 )
INFO  20:27:51,068 - #38 ;
INFO  20:27:51,068 - #49 k1
INFO  20:27:51,068 - #41 .
INFO  20:27:51,068 - #49 postaviStranice
INFO  20:27:51,068 - #42 (
INFO  20:27:51,068 - #48 1
INFO  20:27:51,068 - #40 ,
INFO  20:27:51,068 - #48 2
INFO  20:27:51,068 - #40 ,
INFO  20:27:51,068 - #48 3
INFO  20:27:51,068 - #43 )
INFO  20:27:51,068 - #38 ;
INFO  20:27:51,068 - #49 k2
INFO  20:27:51,068 - #41 .
INFO  20:27:51,068 - #49 postaviStranice
INFO  20:27:51,068 - #42 (
INFO  20:27:51,068 - #48 2
INFO  20:27:51,068 - #40 ,
INFO  20:27:51,069 - #48 3
INFO  20:27:51,069 - #40 ,
INFO  20:27:51,069 - #48 4
INFO  20:27:51,069 - #43 )
INFO  20:27:51,069 - #38 ;
INFO  20:27:51,069 - #49 k3
INFO  20:27:51,069 - #41 .
INFO  20:27:51,069 - #49 postaviStranice
INFO  20:27:51,069 - #42 (
INFO  20:27:51,069 - #48 3
INFO  20:27:51,069 - #40 ,
INFO  20:27:51,069 - #48 4
INFO  20:27:51,069 - #40 ,
INFO  20:27:51,069 - #48 5
INFO  20:27:51,069 - #43 )
INFO  20:27:51,069 - #38 ;
INFO  20:27:51,069 - #49 predmeti
INFO  20:27:51,069 - #44 [
INFO  20:27:51,069 - #48 0
INFO  20:27:51,069 - #45 ]
INFO  20:27:51,069 - #35 =
INFO  20:27:51,069 - #49 s1
INFO  20:27:51,069 - #38 ;
INFO  20:27:51,069 - #49 predmeti
INFO  20:27:51,069 - #44 [
INFO  20:27:51,069 - #48 2
INFO  20:27:51,069 - #45 ]
INFO  20:27:51,069 - #35 =
INFO  20:27:51,069 - #49 s2
INFO  20:27:51,069 - #38 ;
INFO  20:27:51,069 - #49 predmeti
INFO  20:27:51,069 - #44 [
INFO  20:27:51,069 - #48 4
INFO  20:27:51,069 - #45 ]
INFO  20:27:51,069 - #35 =
INFO  20:27:51,069 - #49 s3
INFO  20:27:51,069 - #38 ;
INFO  20:27:51,069 - #49 predmeti
INFO  20:27:51,070 - #44 [
INFO  20:27:51,070 - #48 1
INFO  20:27:51,070 - #45 ]
INFO  20:27:51,070 - #35 =
INFO  20:27:51,070 - #49 k1
INFO  20:27:51,070 - #38 ;
INFO  20:27:51,070 - #49 predmeti
INFO  20:27:51,070 - #44 [
INFO  20:27:51,070 - #48 3
INFO  20:27:51,070 - #45 ]
INFO  20:27:51,070 - #35 =
INFO  20:27:51,070 - #49 k2
INFO  20:27:51,070 - #38 ;
INFO  20:27:51,070 - #49 predmeti
INFO  20:27:51,070 - #44 [
INFO  20:27:51,070 - #48 5
INFO  20:27:51,070 - #45 ]
INFO  20:27:51,070 - #35 =
INFO  20:27:51,070 - #49 k3
INFO  20:27:51,070 - #38 ;
INFO  20:27:51,070 - #9 read
INFO  20:27:51,070 - #42 (
INFO  20:27:51,070 - #49 t
INFO  20:27:51,070 - #43 )
INFO  20:27:51,070 - #38 ;
INFO  20:27:51,070 - #49 i
INFO  20:27:51,070 - #35 =
INFO  20:27:51,070 - #48 0
INFO  20:27:51,070 - #38 ;
INFO  20:27:51,070 - #18 do
INFO  20:27:51,070 - #46 {
INFO  20:27:51,071 - #49 predmeti
INFO  20:27:51,071 - #44 [
INFO  20:27:51,071 - #49 i
INFO  20:27:51,071 - #45 ]
INFO  20:27:51,071 - #41 .
INFO  20:27:51,071 - #49 postaviTezinu
INFO  20:27:51,071 - #42 (
INFO  20:27:51,071 - #49 t
INFO  20:27:51,071 - #43 )
INFO  20:27:51,071 - #38 ;
INFO  20:27:51,071 - #49 i
INFO  20:27:51,071 - #36 ++
INFO  20:27:51,071 - #38 ;
INFO  20:27:51,071 - #47 }
INFO  20:27:51,072 - #19 while
INFO  20:27:51,072 - #42 (
INFO  20:27:51,072 - #49 i
INFO  20:27:51,072 - #26 <
INFO  20:27:51,072 - #48 6
INFO  20:27:51,073 - #43 )
INFO  20:27:51,074 - #38 ;
INFO  20:27:51,074 - #49 zapreminaS
INFO  20:27:51,074 - #35 =
INFO  20:27:51,074 - #48 0
INFO  20:27:51,074 - #38 ;
INFO  20:27:51,074 - #49 tezinaS
INFO  20:27:51,074 - #35 =
INFO  20:27:51,074 - #48 0
INFO  20:27:51,074 - #38 ;
INFO  20:27:51,074 - #49 i
INFO  20:27:51,074 - #35 =
INFO  20:27:51,074 - #48 1
INFO  20:27:51,074 - #38 ;
INFO  20:27:51,074 - #18 do
INFO  20:27:51,074 - #46 {
INFO  20:27:51,074 - #16 if
INFO  20:27:51,074 - #42 (
INFO  20:27:51,075 - #49 i
INFO  20:27:51,075 - #34 %
INFO  20:27:51,075 - #48 2
INFO  20:27:51,075 - #22 ==
INFO  20:27:51,075 - #48 0
INFO  20:27:51,076 - #43 )
INFO  20:27:51,076 - #46 {
INFO  20:27:51,076 - #49 i
INFO  20:27:51,076 - #36 ++
INFO  20:27:51,076 - #38 ;
INFO  20:27:51,076 - #21 continue
INFO  20:27:51,076 - #38 ;
INFO  20:27:51,076 - #47 }
INFO  20:27:51,077 - #49 zapreminaS
INFO  20:27:51,077 - #35 =
INFO  20:27:51,077 - #49 zapreminaS
INFO  20:27:51,077 - #30 +
INFO  20:27:51,077 - #49 predmeti
INFO  20:27:51,079 - #44 [
INFO  20:27:51,079 - #49 i
INFO  20:27:51,079 - #31 -
INFO  20:27:51,079 - #48 1
INFO  20:27:51,079 - #45 ]
INFO  20:27:51,079 - #41 .
INFO  20:27:51,079 - #49 zapremina
INFO  20:27:51,079 - #42 (
INFO  20:27:51,079 - #43 )
INFO  20:27:51,079 - #38 ;
INFO  20:27:51,079 - #49 tezinaS
INFO  20:27:51,079 - #35 =
INFO  20:27:51,080 - #49 tezinaS
INFO  20:27:51,080 - #30 +
INFO  20:27:51,080 - #49 predmeti
INFO  20:27:51,080 - #44 [
INFO  20:27:51,080 - #49 i
INFO  20:27:51,080 - #31 -
INFO  20:27:51,080 - #48 1
INFO  20:27:51,080 - #45 ]
INFO  20:27:51,080 - #41 .
INFO  20:27:51,080 - #49 Q
INFO  20:27:51,080 - #42 (
INFO  20:27:51,080 - #43 )
INFO  20:27:51,080 - #38 ;
INFO  20:27:51,080 - #49 ispis
INFO  20:27:51,080 - #42 (
INFO  20:27:51,080 - #49 predmeti
INFO  20:27:51,080 - #44 [
INFO  20:27:51,080 - #49 i
INFO  20:27:51,080 - #31 -
INFO  20:27:51,080 - #48 1
INFO  20:27:51,080 - #45 ]
INFO  20:27:51,080 - #43 )
INFO  20:27:51,080 - #38 ;
INFO  20:27:51,080 - #49 i
INFO  20:27:51,080 - #36 ++
INFO  20:27:51,080 - #38 ;
INFO  20:27:51,080 - #47 }
INFO  20:27:51,080 - #19 while
INFO  20:27:51,080 - #42 (
INFO  20:27:51,080 - #49 i
INFO  20:27:51,080 - #27 <=
INFO  20:27:51,080 - #48 6
INFO  20:27:51,081 - #43 )
INFO  20:27:51,081 - #38 ;
INFO  20:27:51,081 - #49 zapreminaK
INFO  20:27:51,081 - #35 =
INFO  20:27:51,081 - #48 0
INFO  20:27:51,081 - #38 ;
INFO  20:27:51,081 - #49 tezinaK
INFO  20:27:51,081 - #35 =
INFO  20:27:51,081 - #48 0
INFO  20:27:51,081 - #38 ;
INFO  20:27:51,081 - #49 i
INFO  20:27:51,081 - #35 =
INFO  20:27:51,081 - #48 1
INFO  20:27:51,081 - #38 ;
INFO  20:27:51,081 - #18 do
INFO  20:27:51,081 - #46 {
INFO  20:27:51,081 - #16 if
INFO  20:27:51,081 - #42 (
INFO  20:27:51,081 - #49 i
INFO  20:27:51,081 - #34 %
INFO  20:27:51,081 - #48 2
INFO  20:27:51,081 - #22 ==
INFO  20:27:51,081 - #48 1
INFO  20:27:51,081 - #43 )
INFO  20:27:51,081 - #46 {
INFO  20:27:51,081 - #49 i
INFO  20:27:51,081 - #36 ++
INFO  20:27:51,081 - #38 ;
INFO  20:27:51,081 - #21 continue
INFO  20:27:51,081 - #38 ;
INFO  20:27:51,081 - #47 }
INFO  20:27:51,081 - #49 zapreminaS
INFO  20:27:51,081 - #35 =
INFO  20:27:51,081 - #49 zapreminaS
INFO  20:27:51,081 - #30 +
INFO  20:27:51,081 - #49 predmeti
INFO  20:27:51,081 - #44 [
INFO  20:27:51,081 - #49 i
INFO  20:27:51,081 - #31 -
INFO  20:27:51,082 - #48 1
INFO  20:27:51,082 - #45 ]
INFO  20:27:51,082 - #41 .
INFO  20:27:51,082 - #49 zapremina
INFO  20:27:51,082 - #42 (
INFO  20:27:51,082 - #43 )
INFO  20:27:51,082 - #38 ;
INFO  20:27:51,082 - #49 tezinaS
INFO  20:27:51,082 - #35 =
INFO  20:27:51,082 - #49 tezinaS
INFO  20:27:51,082 - #30 +
INFO  20:27:51,082 - #49 predmeti
INFO  20:27:51,082 - #44 [
INFO  20:27:51,082 - #49 i
INFO  20:27:51,082 - #31 -
INFO  20:27:51,082 - #48 1
INFO  20:27:51,082 - #45 ]
INFO  20:27:51,082 - #41 .
INFO  20:27:51,082 - #49 Q
INFO  20:27:51,082 - #42 (
INFO  20:27:51,082 - #43 )
INFO  20:27:51,082 - #38 ;
INFO  20:27:51,082 - #49 ispis
INFO  20:27:51,082 - #42 (
INFO  20:27:51,082 - #49 predmeti
INFO  20:27:51,082 - #44 [
INFO  20:27:51,082 - #49 i
INFO  20:27:51,082 - #31 -
INFO  20:27:51,082 - #48 1
INFO  20:27:51,082 - #45 ]
INFO  20:27:51,082 - #43 )
INFO  20:27:51,082 - #38 ;
INFO  20:27:51,082 - #49 i
INFO  20:27:51,082 - #36 ++
INFO  20:27:51,082 - #38 ;
INFO  20:27:51,082 - #47 }
INFO  20:27:51,082 - #19 while
INFO  20:27:51,082 - #42 (
INFO  20:27:51,082 - #49 i
INFO  20:27:51,082 - #27 <=
INFO  20:27:51,082 - #48 6
INFO  20:27:51,082 - #43 )
INFO  20:27:51,082 - #38 ;
INFO  20:27:51,082 - #8 print
INFO  20:27:51,082 - #42 (
INFO  20:27:51,082 - #49 zapreminaS
INFO  20:27:51,082 - #43 )
INFO  20:27:51,082 - #38 ;
INFO  20:27:51,082 - #8 print
INFO  20:27:51,082 - #42 (
INFO  20:27:51,082 - #49 eol
INFO  20:27:51,083 - #43 )
INFO  20:27:51,083 - #38 ;
INFO  20:27:51,083 - #8 print
INFO  20:27:51,083 - #42 (
INFO  20:27:51,083 - #49 zapreminaK
INFO  20:27:51,083 - #43 )
INFO  20:27:51,083 - #38 ;
INFO  20:27:51,083 - #8 print
INFO  20:27:51,083 - #42 (
INFO  20:27:51,083 - #49 eol
INFO  20:27:51,083 - #43 )
INFO  20:27:51,083 - #38 ;
INFO  20:27:51,083 - #8 print
INFO  20:27:51,083 - #42 (
INFO  20:27:51,083 - #49 tezinaS
INFO  20:27:51,083 - #43 )
INFO  20:27:51,083 - #38 ;
INFO  20:27:51,083 - #8 print
INFO  20:27:51,083 - #42 (
INFO  20:27:51,083 - #49 eol
INFO  20:27:51,083 - #43 )
INFO  20:27:51,083 - #38 ;
INFO  20:27:51,083 - #8 print
INFO  20:27:51,083 - #42 (
INFO  20:27:51,083 - #49 tezinaK
INFO  20:27:51,083 - #43 )
INFO  20:27:51,083 - #38 ;
INFO  20:27:51,083 - #8 print
INFO  20:27:51,083 - #42 (
INFO  20:27:51,083 - #49 eol
INFO  20:27:51,083 - #43 )
INFO  20:27:51,083 - #38 ;
INFO  20:27:51,083 - #47 }
INFO  20:27:51,083 - #47 }
INFO  20:27:51,084 - Parsiranje uspesno zavrseno.
INFO  20:27:51,099 - Program(
  ProgramName(
   test_303
  ) [ProgramName]
  MultipleDecl(
    MultipleDecl(
      MultipleDecl(
        MultipleDecl(
          MultipleDecl(
            MultipleDecl(
              EmptyDeclList(
              ) [EmptyDeclList]
              ConstDeclD(
                ConstD(
                  ConstTypeName(
                    Type(
                     int
                    ) [Type]
                  ) [ConstTypeName]
                  MultipleConst(
                    SingleConst(
                      NumberConst(
                       cinilac
                       4
                      ) [NumberConst]
                    ) [SingleConst]
                    NumberConst(
                     delilac
                     3
                    ) [NumberConst]
                  ) [MultipleConst]
                ) [ConstD]
              ) [ConstDeclD]
            ) [MultipleDecl]
            ClassDeclD(
              ClassDecl(
                ClassName(
                 Predmet
                ) [ClassName]
                EmptyClassEx(
                ) [EmptyClassEx]
                VarDeclListHasItems(
                  VarDeclListHasItems(
                    VarDeclListHasItems(
                      EmptyVarDeclList(
                      ) [EmptyVarDeclList]
                      VarD(
                        Type(
                         int
                        ) [Type]
                        SingleVar(
                          NonArrayVar(
                           tezina
                          ) [NonArrayVar]
                        ) [SingleVar]
                      ) [VarD]
                    ) [VarDeclListHasItems]
                    VarD(
                      Type(
                       int
                      ) [Type]
                      SingleVar(
                        NonArrayVar(
                         koefTezine
                        ) [NonArrayVar]
                      ) [SingleVar]
                    ) [VarD]
                  ) [VarDeclListHasItems]
                  VarD(
                    Type(
                     char
                    ) [Type]
                    SingleVar(
                      NonArrayVar(
                       vrsta
                      ) [NonArrayVar]
                    ) [SingleVar]
                  ) [VarD]
                ) [VarDeclListHasItems]
                ClassMethodsBodyBoth(
                  ConstructorDecl(
                    ConstructorName(
                     Predmet
                    ) [ConstructorName]
                    EmptyVarDeclListNoError(
                    ) [EmptyVarDeclListNoError]
                    StatementListHasStatements(
                      EmptyStatementList(
                      ) [EmptyStatementList]
                      StatementSingle(
                        DStatement(
                          DesignatorStatementAssign(
                            DesignatorAssign(
                              SingleDesignator(
                               koefTezine
                              ) [SingleDesignator]
                              Assign(
                              ) [Assign]
                              SingleExpr(
                                SingleTerm(
                                  NumberFactor(
                                   1
                                  ) [NumberFactor]
                                ) [SingleTerm]
                              ) [SingleExpr]
                            ) [DesignatorAssign]
                          ) [DesignatorStatementAssign]
                        ) [DStatement]
                      ) [StatementSingle]
                    ) [StatementListHasStatements]
                  ) [ConstructorDecl]
                  MethodDList(
                    MethodDList(
                      MethodDList(
                        MethodDList(
                          MethodDList(
                            MethodDList(
                              MethodDList(
                                SingleMethodDeclList(
                                  MethodDecl(
                                    MethodVoid(
                                     postaviTezinu
                                    ) [MethodVoid]
                                    MethodParamsOnlyForm(
                                      SingleFormParsList(
                                        FormParsNonArray(
                                          Type(
                                           int
                                          ) [Type]
                                         tezina
                                        ) [FormParsNonArray]
                                      ) [SingleFormParsList]
                                    ) [MethodParamsOnlyForm]
                                    MethodSigEnd(
                                    ) [MethodSigEnd]
                                    EmptyVarDeclListNoError(
                                    ) [EmptyVarDeclListNoError]
                                    StatementListHasStatements(
                                      EmptyStatementList(
                                      ) [EmptyStatementList]
                                      StatementSingle(
                                        DStatement(
                                          DesignatorStatementAssign(
                                            DesignatorAssign(
                                              DesignatorMultiple(
                                                DesignatorThis(
                                                ) [DesignatorThis]
                                               tezina
                                              ) [DesignatorMultiple]
                                              Assign(
                                              ) [Assign]
                                              SingleExpr(
                                                TermMultiple(
                                                  SingleTerm(
                                                    DesignatorFactor(
                                                      SingleDesignator(
                                                       tezina
                                                      ) [SingleDesignator]
                                                    ) [DesignatorFactor]
                                                  ) [SingleTerm]
                                                  MulOpStar(
                                                  ) [MulOpStar]
                                                  DesignatorFactor(
                                                    SingleDesignator(
                                                     koefTezine
                                                    ) [SingleDesignator]
                                                  ) [DesignatorFactor]
                                                ) [TermMultiple]
                                              ) [SingleExpr]
                                            ) [DesignatorAssign]
                                          ) [DesignatorStatementAssign]
                                        ) [DStatement]
                                      ) [StatementSingle]
                                    ) [StatementListHasStatements]
                                  ) [MethodDecl]
                                ) [SingleMethodDeclList]
                                MethodDecl(
                                  MethodVoid(
                                   ucitajTezinu
                                  ) [MethodVoid]
                                  EmptyMethodParams(
                                  ) [EmptyMethodParams]
                                  MethodSigEnd(
                                  ) [MethodSigEnd]
                                  EmptyVarDeclListNoError(
                                  ) [EmptyVarDeclListNoError]
                                  StatementListHasStatements(
                                    EmptyStatementList(
                                    ) [EmptyStatementList]
                                    StatementSingle(
                                      ReadStatement(
                                        SingleDesignator(
                                         tezina
                                        ) [SingleDesignator]
                                      ) [ReadStatement]
                                    ) [StatementSingle]
                                  ) [StatementListHasStatements]
                                ) [MethodDecl]
                              ) [MethodDList]
                              MethodDecl(
                                MethodType(
                                  Type(
                                   int
                                  ) [Type]
                                 zapremina
                                ) [MethodType]
                                EmptyMethodParams(
                                ) [EmptyMethodParams]
                                MethodSigEnd(
                                ) [MethodSigEnd]
                                EmptyVarDeclListNoError(
                                ) [EmptyVarDeclListNoError]
                                StatementListHasStatements(
                                  EmptyStatementList(
                                  ) [EmptyStatementList]
                                  StatementSingle(
                                    ReturnExprStatement(
                                      SingleExpr(
                                        SingleTerm(
                                          NumberFactor(
                                           0
                                          ) [NumberFactor]
                                        ) [SingleTerm]
                                      ) [SingleExpr]
                                    ) [ReturnExprStatement]
                                  ) [StatementSingle]
                                ) [StatementListHasStatements]
                              ) [MethodDecl]
                            ) [MethodDList]
                            MethodDecl(
                              MethodType(
                                Type(
                                 int
                                ) [Type]
                               Q
                              ) [MethodType]
                              EmptyMethodParams(
                              ) [EmptyMethodParams]
                              MethodSigEnd(
                              ) [MethodSigEnd]
                              EmptyVarDeclListNoError(
                              ) [EmptyVarDeclListNoError]
                              StatementListHasStatements(
                                EmptyStatementList(
                                ) [EmptyStatementList]
                                StatementSingle(
                                  ReturnExprStatement(
                                    SingleExpr(
                                      TermMultiple(
                                        SingleTerm(
                                          DesignatorActParsFactor(
                                            MakeNewActParmsListDesignator(
                                              SingleDesignator(
                                               zapremina
                                              ) [SingleDesignator]
                                            ) [MakeNewActParmsListDesignator]
                                            EmptyActParsList(
                                            ) [EmptyActParsList]
                                          ) [DesignatorActParsFactor]
                                        ) [SingleTerm]
                                        MulOpStar(
                                        ) [MulOpStar]
                                        DesignatorFactor(
                                          SingleDesignator(
                                           tezina
                                          ) [SingleDesignator]
                                        ) [DesignatorFactor]
                                      ) [TermMultiple]
                                    ) [SingleExpr]
                                  ) [ReturnExprStatement]
                                ) [StatementSingle]
                              ) [StatementListHasStatements]
                            ) [MethodDecl]
                          ) [MethodDList]
                          MethodDecl(
                            MethodVoid(
                             postaviVrstu
                            ) [MethodVoid]
                            MethodParamsOnlyForm(
                              SingleFormParsList(
                                FormParsNonArray(
                                  Type(
                                   char
                                  ) [Type]
                                 vrsta
                                ) [FormParsNonArray]
                              ) [SingleFormParsList]
                            ) [MethodParamsOnlyForm]
                            MethodSigEnd(
                            ) [MethodSigEnd]
                            EmptyVarDeclListNoError(
                            ) [EmptyVarDeclListNoError]
                            StatementListHasStatements(
                              EmptyStatementList(
                              ) [EmptyStatementList]
                              StatementSingle(
                                DStatement(
                                  DesignatorStatementAssign(
                                    DesignatorAssign(
                                      DesignatorMultiple(
                                        DesignatorThis(
                                        ) [DesignatorThis]
                                       vrsta
                                      ) [DesignatorMultiple]
                                      Assign(
                                      ) [Assign]
                                      SingleExpr(
                                        SingleTerm(
                                          DesignatorFactor(
                                            SingleDesignator(
                                             vrsta
                                            ) [SingleDesignator]
                                          ) [DesignatorFactor]
                                        ) [SingleTerm]
                                      ) [SingleExpr]
                                    ) [DesignatorAssign]
                                  ) [DesignatorStatementAssign]
                                ) [DStatement]
                              ) [StatementSingle]
                            ) [StatementListHasStatements]
                          ) [MethodDecl]
                        ) [MethodDList]
                        MethodDecl(
                          MethodType(
                            Type(
                             char
                            ) [Type]
                           dohvVrstu
                          ) [MethodType]
                          EmptyMethodParams(
                          ) [EmptyMethodParams]
                          MethodSigEnd(
                          ) [MethodSigEnd]
                          EmptyVarDeclListNoError(
                          ) [EmptyVarDeclListNoError]
                          StatementListHasStatements(
                            EmptyStatementList(
                            ) [EmptyStatementList]
                            StatementSingle(
                              ReturnExprStatement(
                                SingleExpr(
                                  SingleTerm(
                                    DesignatorFactor(
                                      SingleDesignator(
                                       vrsta
                                      ) [SingleDesignator]
                                    ) [DesignatorFactor]
                                  ) [SingleTerm]
                                ) [SingleExpr]
                              ) [ReturnExprStatement]
                            ) [StatementSingle]
                          ) [StatementListHasStatements]
                        ) [MethodDecl]
                      ) [MethodDList]
                      MethodDecl(
                        MethodType(
                          Type(
                           int
                          ) [Type]
                         dohvTezinu
                        ) [MethodType]
                        EmptyMethodParams(
                        ) [EmptyMethodParams]
                        MethodSigEnd(
                        ) [MethodSigEnd]
                        EmptyVarDeclListNoError(
                        ) [EmptyVarDeclListNoError]
                        StatementListHasStatements(
                          EmptyStatementList(
                          ) [EmptyStatementList]
                          StatementSingle(
                            ReturnExprStatement(
                              SingleExpr(
                                SingleTerm(
                                  DesignatorFactor(
                                    SingleDesignator(
                                     tezina
                                    ) [SingleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleTerm]
                              ) [SingleExpr]
                            ) [ReturnExprStatement]
                          ) [StatementSingle]
                        ) [StatementListHasStatements]
                      ) [MethodDecl]
                    ) [MethodDList]
                    MethodDecl(
                      MethodVoid(
                       ispisi
                      ) [MethodVoid]
                      EmptyMethodParams(
                      ) [EmptyMethodParams]
                      MethodSigEnd(
                      ) [MethodSigEnd]
                      EmptyVarDeclListNoError(
                      ) [EmptyVarDeclListNoError]
                      StatementListHasStatements(
                        StatementListHasStatements(
                          EmptyStatementList(
                          ) [EmptyStatementList]
                          StatementSingle(
                            PrintNoNumStatement(
                              SingleExpr(
                                SingleTerm(
                                  DesignatorFactor(
                                    SingleDesignator(
                                     vrsta
                                    ) [SingleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleTerm]
                              ) [SingleExpr]
                            ) [PrintNoNumStatement]
                          ) [StatementSingle]
                        ) [StatementListHasStatements]
                        StatementSingle(
                          PrintNoNumStatement(
                            SingleExpr(
                              SingleTerm(
                                DesignatorActParsFactor(
                                  MakeNewActParmsListDesignator(
                                    SingleDesignator(
                                     Q
                                    ) [SingleDesignator]
                                  ) [MakeNewActParmsListDesignator]
                                  EmptyActParsList(
                                  ) [EmptyActParsList]
                                ) [DesignatorActParsFactor]
                              ) [SingleTerm]
                            ) [SingleExpr]
                          ) [PrintNoNumStatement]
                        ) [StatementSingle]
                      ) [StatementListHasStatements]
                    ) [MethodDecl]
                  ) [MethodDList]
                ) [ClassMethodsBodyBoth]
              ) [ClassDecl]
            ) [ClassDeclD]
          ) [MultipleDecl]
          ClassDeclD(
            ClassDecl(
              ClassName(
               Sfera
              ) [ClassName]
              ClassEx(
                Type(
                 Predmet
                ) [Type]
              ) [ClassEx]
              VarDeclListHasItems(
                EmptyVarDeclList(
                ) [EmptyVarDeclList]
                VarD(
                  Type(
                   int
                  ) [Type]
                  SingleVar(
                    NonArrayVar(
                     r
                    ) [NonArrayVar]
                  ) [SingleVar]
                ) [VarD]
              ) [VarDeclListHasItems]
              ClassMethodsBodyBoth(
                ConstructorDecl(
                  ConstructorName(
                   Sfera
                  ) [ConstructorName]
                  EmptyVarDeclListNoError(
                  ) [EmptyVarDeclListNoError]
                  StatementListHasStatements(
                    StatementListHasStatements(
                      EmptyStatementList(
                      ) [EmptyStatementList]
                      StatementSingle(
                        DStatement(
                          DesignatorStatementSuper(
                            MakeNewActParmsListSuper(
                            ) [MakeNewActParmsListSuper]
                            EmptyActParsList(
                            ) [EmptyActParsList]
                          ) [DesignatorStatementSuper]
                        ) [DStatement]
                      ) [StatementSingle]
                    ) [StatementListHasStatements]
                    StatementSingle(
                      DStatement(
                        DesignatorStatementAssign(
                          DesignatorAssign(
                            SingleDesignator(
                             vrsta
                            ) [SingleDesignator]
                            Assign(
                            ) [Assign]
                            SingleExpr(
                              SingleTerm(
                                CharFactor(
                                 s
                                ) [CharFactor]
                              ) [SingleTerm]
                            ) [SingleExpr]
                          ) [DesignatorAssign]
                        ) [DesignatorStatementAssign]
                      ) [DStatement]
                    ) [StatementSingle]
                  ) [StatementListHasStatements]
                ) [ConstructorDecl]
                MethodDList(
                  MethodDList(
                    SingleMethodDeclList(
                      MethodDecl(
                        MethodVoid(
                         postaviPoluprecnik
                        ) [MethodVoid]
                        MethodParamsOnlyForm(
                          SingleFormParsList(
                            FormParsNonArray(
                              Type(
                               int
                              ) [Type]
                             r
                            ) [FormParsNonArray]
                          ) [SingleFormParsList]
                        ) [MethodParamsOnlyForm]
                        MethodSigEnd(
                        ) [MethodSigEnd]
                        EmptyVarDeclListNoError(
                        ) [EmptyVarDeclListNoError]
                        StatementListHasStatements(
                          EmptyStatementList(
                          ) [EmptyStatementList]
                          StatementSingle(
                            DStatement(
                              DesignatorStatementAssign(
                                DesignatorAssign(
                                  DesignatorMultiple(
                                    DesignatorThis(
                                    ) [DesignatorThis]
                                   r
                                  ) [DesignatorMultiple]
                                  Assign(
                                  ) [Assign]
                                  SingleExpr(
                                    SingleTerm(
                                      DesignatorFactor(
                                        SingleDesignator(
                                         r
                                        ) [SingleDesignator]
                                      ) [DesignatorFactor]
                                    ) [SingleTerm]
                                  ) [SingleExpr]
                                ) [DesignatorAssign]
                              ) [DesignatorStatementAssign]
                            ) [DStatement]
                          ) [StatementSingle]
                        ) [StatementListHasStatements]
                      ) [MethodDecl]
                    ) [SingleMethodDeclList]
                    MethodDecl(
                      MethodType(
                        Type(
                         int
                        ) [Type]
                       zapremina
                      ) [MethodType]
                      EmptyMethodParams(
                      ) [EmptyMethodParams]
                      MethodSigEnd(
                      ) [MethodSigEnd]
                      VarDeclListNoErrorHasItems(
                        EmptyVarDeclListNoError(
                        ) [EmptyVarDeclListNoError]
                        VarDNoError(
                          Type(
                           int
                          ) [Type]
                          SingleVarNoError(
                            NonArrayVarNoError(
                             z
                            ) [NonArrayVarNoError]
                          ) [SingleVarNoError]
                        ) [VarDNoError]
                      ) [VarDeclListNoErrorHasItems]
                      StatementListHasStatements(
                        StatementListHasStatements(
                          EmptyStatementList(
                          ) [EmptyStatementList]
                          StatementSingle(
                            DStatement(
                              DesignatorStatementAssign(
                                DesignatorAssign(
                                  SingleDesignator(
                                   z
                                  ) [SingleDesignator]
                                  Assign(
                                  ) [Assign]
                                  SingleExpr(
                                    SingleTerm(
                                      DesignatorFactor(
                                        SingleDesignator(
                                         cinilac
                                        ) [SingleDesignator]
                                      ) [DesignatorFactor]
                                    ) [SingleTerm]
                                  ) [SingleExpr]
                                ) [DesignatorAssign]
                              ) [DesignatorStatementAssign]
                            ) [DStatement]
                          ) [StatementSingle]
                        ) [StatementListHasStatements]
                        StatementSingle(
                          ReturnExprStatement(
                            SingleExpr(
                              TermMultiple(
                                SingleTerm(
                                  DesignatorFactor(
                                    SingleDesignator(
                                     z
                                    ) [SingleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleTerm]
                                MulOpStar(
                                ) [MulOpStar]
                                ExprFactor(
                                  SingleExpr(
                                    TermMultiple(
                                      SingleTerm(
                                        DesignatorFactor(
                                          SingleDesignator(
                                           r
                                          ) [SingleDesignator]
                                        ) [DesignatorFactor]
                                      ) [SingleTerm]
                                      MulOpSlash(
                                      ) [MulOpSlash]
                                      DesignatorFactor(
                                        SingleDesignator(
                                         delilac
                                        ) [SingleDesignator]
                                      ) [DesignatorFactor]
                                    ) [TermMultiple]
                                  ) [SingleExpr]
                                ) [ExprFactor]
                              ) [TermMultiple]
                            ) [SingleExpr]
                          ) [ReturnExprStatement]
                        ) [StatementSingle]
                      ) [StatementListHasStatements]
                    ) [MethodDecl]
                  ) [MethodDList]
                  MethodDecl(
                    MethodVoid(
                     ispisi
                    ) [MethodVoid]
                    EmptyMethodParams(
                    ) [EmptyMethodParams]
                    MethodSigEnd(
                    ) [MethodSigEnd]
                    EmptyVarDeclListNoError(
                    ) [EmptyVarDeclListNoError]
                    StatementListHasStatements(
                      StatementListHasStatements(
                        StatementListHasStatements(
                          EmptyStatementList(
                          ) [EmptyStatementList]
                          StatementSingle(
                            DStatement(
                              DesignatorStatementSuper(
                                MakeNewActParmsListSuper(
                                ) [MakeNewActParmsListSuper]
                                EmptyActParsList(
                                ) [EmptyActParsList]
                              ) [DesignatorStatementSuper]
                            ) [DStatement]
                          ) [StatementSingle]
                        ) [StatementListHasStatements]
                        StatementSingle(
                          PrintNoNumStatement(
                            SingleExpr(
                              SingleTerm(
                                DesignatorFactor(
                                  SingleDesignator(
                                   r
                                  ) [SingleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleTerm]
                            ) [SingleExpr]
                          ) [PrintNoNumStatement]
                        ) [StatementSingle]
                      ) [StatementListHasStatements]
                      StatementSingle(
                        PrintNoNumStatement(
                          SingleExpr(
                            SingleTerm(
                              DesignatorFactor(
                                SingleDesignator(
                                 eol
                                ) [SingleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleTerm]
                          ) [SingleExpr]
                        ) [PrintNoNumStatement]
                      ) [StatementSingle]
                    ) [StatementListHasStatements]
                  ) [MethodDecl]
                ) [MethodDList]
              ) [ClassMethodsBodyBoth]
            ) [ClassDecl]
          ) [ClassDeclD]
        ) [MultipleDecl]
        ClassDeclD(
          ClassDecl(
            ClassName(
             Kvadar
            ) [ClassName]
            ClassEx(
              Type(
               Predmet
              ) [Type]
            ) [ClassEx]
            VarDeclListHasItems(
              EmptyVarDeclList(
              ) [EmptyVarDeclList]
              VarD(
                Type(
                 int
                ) [Type]
                MultipleVar(
                  MultipleVar(
                    SingleVar(
                      NonArrayVar(
                       a
                      ) [NonArrayVar]
                    ) [SingleVar]
                    NonArrayVar(
                     b
                    ) [NonArrayVar]
                  ) [MultipleVar]
                  NonArrayVar(
                   c
                  ) [NonArrayVar]
                ) [MultipleVar]
              ) [VarD]
            ) [VarDeclListHasItems]
            ClassMethodsBodyBoth(
              ConstructorDecl(
                ConstructorName(
                 Kvadar
                ) [ConstructorName]
                EmptyVarDeclListNoError(
                ) [EmptyVarDeclListNoError]
                StatementListHasStatements(
                  StatementListHasStatements(
                    EmptyStatementList(
                    ) [EmptyStatementList]
                    StatementSingle(
                      DStatement(
                        DesignatorStatementSuper(
                          MakeNewActParmsListSuper(
                          ) [MakeNewActParmsListSuper]
                          EmptyActParsList(
                          ) [EmptyActParsList]
                        ) [DesignatorStatementSuper]
                      ) [DStatement]
                    ) [StatementSingle]
                  ) [StatementListHasStatements]
                  StatementSingle(
                    DStatement(
                      DesignatorStatementAssign(
                        DesignatorAssign(
                          SingleDesignator(
                           vrsta
                          ) [SingleDesignator]
                          Assign(
                          ) [Assign]
                          SingleExpr(
                            SingleTerm(
                              CharFactor(
                               k
                              ) [CharFactor]
                            ) [SingleTerm]
                          ) [SingleExpr]
                        ) [DesignatorAssign]
                      ) [DesignatorStatementAssign]
                    ) [DStatement]
                  ) [StatementSingle]
                ) [StatementListHasStatements]
              ) [ConstructorDecl]
              MethodDList(
                MethodDList(
                  SingleMethodDeclList(
                    MethodDecl(
                      MethodVoid(
                       postaviStranice
                      ) [MethodVoid]
                      MethodParamsOnlyForm(
                        FormParsListMultiple(
                          FormParsListMultiple(
                            SingleFormParsList(
                              FormParsNonArray(
                                Type(
                                 int
                                ) [Type]
                               a
                              ) [FormParsNonArray]
                            ) [SingleFormParsList]
                            FormParsNonArray(
                              Type(
                               int
                              ) [Type]
                             b
                            ) [FormParsNonArray]
                          ) [FormParsListMultiple]
                          FormParsNonArray(
                            Type(
                             int
                            ) [Type]
                           c
                          ) [FormParsNonArray]
                        ) [FormParsListMultiple]
                      ) [MethodParamsOnlyForm]
                      MethodSigEnd(
                      ) [MethodSigEnd]
                      EmptyVarDeclListNoError(
                      ) [EmptyVarDeclListNoError]
                      StatementListHasStatements(
                        StatementListHasStatements(
                          StatementListHasStatements(
                            EmptyStatementList(
                            ) [EmptyStatementList]
                            StatementSingle(
                              DStatement(
                                DesignatorStatementAssign(
                                  DesignatorAssign(
                                    DesignatorMultiple(
                                      DesignatorThis(
                                      ) [DesignatorThis]
                                     a
                                    ) [DesignatorMultiple]
                                    Assign(
                                    ) [Assign]
                                    SingleExpr(
                                      SingleTerm(
                                        DesignatorFactor(
                                          SingleDesignator(
                                           a
                                          ) [SingleDesignator]
                                        ) [DesignatorFactor]
                                      ) [SingleTerm]
                                    ) [SingleExpr]
                                  ) [DesignatorAssign]
                                ) [DesignatorStatementAssign]
                              ) [DStatement]
                            ) [StatementSingle]
                          ) [StatementListHasStatements]
                          StatementSingle(
                            DStatement(
                              DesignatorStatementAssign(
                                DesignatorAssign(
                                  DesignatorMultiple(
                                    DesignatorThis(
                                    ) [DesignatorThis]
                                   b
                                  ) [DesignatorMultiple]
                                  Assign(
                                  ) [Assign]
                                  SingleExpr(
                                    SingleTerm(
                                      DesignatorFactor(
                                        SingleDesignator(
                                         b
                                        ) [SingleDesignator]
                                      ) [DesignatorFactor]
                                    ) [SingleTerm]
                                  ) [SingleExpr]
                                ) [DesignatorAssign]
                              ) [DesignatorStatementAssign]
                            ) [DStatement]
                          ) [StatementSingle]
                        ) [StatementListHasStatements]
                        StatementSingle(
                          DStatement(
                            DesignatorStatementAssign(
                              DesignatorAssign(
                                DesignatorMultiple(
                                  DesignatorThis(
                                  ) [DesignatorThis]
                                 c
                                ) [DesignatorMultiple]
                                Assign(
                                ) [Assign]
                                SingleExpr(
                                  SingleTerm(
                                    DesignatorFactor(
                                      SingleDesignator(
                                       c
                                      ) [SingleDesignator]
                                    ) [DesignatorFactor]
                                  ) [SingleTerm]
                                ) [SingleExpr]
                              ) [DesignatorAssign]
                            ) [DesignatorStatementAssign]
                          ) [DStatement]
                        ) [StatementSingle]
                      ) [StatementListHasStatements]
                    ) [MethodDecl]
                  ) [SingleMethodDeclList]
                  MethodDecl(
                    MethodType(
                      Type(
                       int
                      ) [Type]
                     zapremina
                    ) [MethodType]
                    EmptyMethodParams(
                    ) [EmptyMethodParams]
                    MethodSigEnd(
                    ) [MethodSigEnd]
                    VarDeclListNoErrorHasItems(
                      EmptyVarDeclListNoError(
                      ) [EmptyVarDeclListNoError]
                      VarDNoError(
                        Type(
                         int
                        ) [Type]
                        SingleVarNoError(
                          NonArrayVarNoError(
                           z
                          ) [NonArrayVarNoError]
                        ) [SingleVarNoError]
                      ) [VarDNoError]
                    ) [VarDeclListNoErrorHasItems]
                    StatementListHasStatements(
                      StatementListHasStatements(
                        EmptyStatementList(
                        ) [EmptyStatementList]
                        StatementSingle(
                          DStatement(
                            DesignatorStatementAssign(
                              DesignatorAssign(
                                SingleDesignator(
                                 z
                                ) [SingleDesignator]
                                Assign(
                                ) [Assign]
                                SingleExpr(
                                  TermMultiple(
                                    TermMultiple(
                                      SingleTerm(
                                        DesignatorFactor(
                                          SingleDesignator(
                                           a
                                          ) [SingleDesignator]
                                        ) [DesignatorFactor]
                                      ) [SingleTerm]
                                      MulOpStar(
                                      ) [MulOpStar]
                                      DesignatorFactor(
                                        SingleDesignator(
                                         b
                                        ) [SingleDesignator]
                                      ) [DesignatorFactor]
                                    ) [TermMultiple]
                                    MulOpStar(
                                    ) [MulOpStar]
                                    DesignatorFactor(
                                      SingleDesignator(
                                       c
                                      ) [SingleDesignator]
                                    ) [DesignatorFactor]
                                  ) [TermMultiple]
                                ) [SingleExpr]
                              ) [DesignatorAssign]
                            ) [DesignatorStatementAssign]
                          ) [DStatement]
                        ) [StatementSingle]
                      ) [StatementListHasStatements]
                      StatementSingle(
                        ReturnExprStatement(
                          SingleExpr(
                            SingleTerm(
                              DesignatorFactor(
                                SingleDesignator(
                                 z
                                ) [SingleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleTerm]
                          ) [SingleExpr]
                        ) [ReturnExprStatement]
                      ) [StatementSingle]
                    ) [StatementListHasStatements]
                  ) [MethodDecl]
                ) [MethodDList]
                MethodDecl(
                  MethodVoid(
                   ispisi
                  ) [MethodVoid]
                  EmptyMethodParams(
                  ) [EmptyMethodParams]
                  MethodSigEnd(
                  ) [MethodSigEnd]
                  EmptyVarDeclListNoError(
                  ) [EmptyVarDeclListNoError]
                  StatementListHasStatements(
                    StatementListHasStatements(
                      StatementListHasStatements(
                        StatementListHasStatements(
                          StatementListHasStatements(
                            EmptyStatementList(
                            ) [EmptyStatementList]
                            StatementSingle(
                              DStatement(
                                DesignatorStatementSuper(
                                  MakeNewActParmsListSuper(
                                  ) [MakeNewActParmsListSuper]
                                  EmptyActParsList(
                                  ) [EmptyActParsList]
                                ) [DesignatorStatementSuper]
                              ) [DStatement]
                            ) [StatementSingle]
                          ) [StatementListHasStatements]
                          StatementSingle(
                            PrintNoNumStatement(
                              SingleExpr(
                                SingleTerm(
                                  DesignatorFactor(
                                    SingleDesignator(
                                     a
                                    ) [SingleDesignator]
                                  ) [DesignatorFactor]
                                ) [SingleTerm]
                              ) [SingleExpr]
                            ) [PrintNoNumStatement]
                          ) [StatementSingle]
                        ) [StatementListHasStatements]
                        StatementSingle(
                          PrintNoNumStatement(
                            SingleExpr(
                              SingleTerm(
                                DesignatorFactor(
                                  SingleDesignator(
                                   b
                                  ) [SingleDesignator]
                                ) [DesignatorFactor]
                              ) [SingleTerm]
                            ) [SingleExpr]
                          ) [PrintNoNumStatement]
                        ) [StatementSingle]
                      ) [StatementListHasStatements]
                      StatementSingle(
                        PrintNoNumStatement(
                          SingleExpr(
                            SingleTerm(
                              DesignatorFactor(
                                SingleDesignator(
                                 c
                                ) [SingleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleTerm]
                          ) [SingleExpr]
                        ) [PrintNoNumStatement]
                      ) [StatementSingle]
                    ) [StatementListHasStatements]
                    StatementSingle(
                      PrintNoNumStatement(
                        SingleExpr(
                          SingleTerm(
                            DesignatorFactor(
                              SingleDesignator(
                               eol
                              ) [SingleDesignator]
                            ) [DesignatorFactor]
                          ) [SingleTerm]
                        ) [SingleExpr]
                      ) [PrintNoNumStatement]
                    ) [StatementSingle]
                  ) [StatementListHasStatements]
                ) [MethodDecl]
              ) [MethodDList]
            ) [ClassMethodsBodyBoth]
          ) [ClassDecl]
        ) [ClassDeclD]
      ) [MultipleDecl]
      VarDeclD(
        VarD(
          Type(
           int
          ) [Type]
          MultipleVar(
            SingleVar(
              NonArrayVar(
               zapreminaK
              ) [NonArrayVar]
            ) [SingleVar]
            NonArrayVar(
             zapreminaS
            ) [NonArrayVar]
          ) [MultipleVar]
        ) [VarD]
      ) [VarDeclD]
    ) [MultipleDecl]
    VarDeclD(
      VarD(
        Type(
         int
        ) [Type]
        MultipleVar(
          SingleVar(
            NonArrayVar(
             tezinaK
            ) [NonArrayVar]
          ) [SingleVar]
          NonArrayVar(
           tezinaS
          ) [NonArrayVar]
        ) [MultipleVar]
      ) [VarD]
    ) [VarDeclD]
  ) [MultipleDecl]
  MethodDList(
    SingleMethodDeclList(
      MethodDecl(
        MethodVoid(
         ispis
        ) [MethodVoid]
        MethodParamsOnlyForm(
          SingleFormParsList(
            FormParsNonArray(
              Type(
               Predmet
              ) [Type]
             p
            ) [FormParsNonArray]
          ) [SingleFormParsList]
        ) [MethodParamsOnlyForm]
        MethodSigEnd(
        ) [MethodSigEnd]
        EmptyVarDeclListNoError(
        ) [EmptyVarDeclListNoError]
        StatementListHasStatements(
          StatementListHasStatements(
            StatementListHasStatements(
              EmptyStatementList(
              ) [EmptyStatementList]
              StatementSingle(
                DStatement(
                  DesignatorStatementAct(
                    MakeNewActParmsListDesignator(
                      DesignatorMultiple(
                        SingleDesignator(
                         p
                        ) [SingleDesignator]
                       ispisi
                      ) [DesignatorMultiple]
                    ) [MakeNewActParmsListDesignator]
                    EmptyActParsList(
                    ) [EmptyActParsList]
                  ) [DesignatorStatementAct]
                ) [DStatement]
              ) [StatementSingle]
            ) [StatementListHasStatements]
            StatementSingle(
              PrintNoNumStatement(
                SingleExpr(
                  SingleTerm(
                    DesignatorFactor(
                      SingleDesignator(
                       eol
                      ) [SingleDesignator]
                    ) [DesignatorFactor]
                  ) [SingleTerm]
                ) [SingleExpr]
              ) [PrintNoNumStatement]
            ) [StatementSingle]
          ) [StatementListHasStatements]
          StatementSingle(
            PrintNoNumStatement(
              SingleExpr(
                SingleTerm(
                  DesignatorActParsFactor(
                    MakeNewActParmsListDesignator(
                      DesignatorMultiple(
                        SingleDesignator(
                         p
                        ) [SingleDesignator]
                       dohvTezinu
                      ) [DesignatorMultiple]
                    ) [MakeNewActParmsListDesignator]
                    EmptyActParsList(
                    ) [EmptyActParsList]
                  ) [DesignatorActParsFactor]
                ) [SingleTerm]
              ) [SingleExpr]
            ) [PrintNoNumStatement]
          ) [StatementSingle]
        ) [StatementListHasStatements]
      ) [MethodDecl]
    ) [SingleMethodDeclList]
    MethodDecl(
      MethodVoid(
       main
      ) [MethodVoid]
      EmptyMethodParams(
      ) [EmptyMethodParams]
      MethodSigEnd(
      ) [MethodSigEnd]
      VarDeclListNoErrorHasItems(
        VarDeclListNoErrorHasItems(
          VarDeclListNoErrorHasItems(
            VarDeclListNoErrorHasItems(
              VarDeclListNoErrorHasItems(
                EmptyVarDeclListNoError(
                ) [EmptyVarDeclListNoError]
                VarDNoError(
                  Type(
                   Predmet
                  ) [Type]
                  SingleVarNoError(
                    ArrayVarNoError(
                     predmeti
                    ) [ArrayVarNoError]
                  ) [SingleVarNoError]
                ) [VarDNoError]
              ) [VarDeclListNoErrorHasItems]
              VarDNoError(
                Type(
                 int
                ) [Type]
                SingleVarNoError(
                  NonArrayVarNoError(
                   i
                  ) [NonArrayVarNoError]
                ) [SingleVarNoError]
              ) [VarDNoError]
            ) [VarDeclListNoErrorHasItems]
            VarDNoError(
              Type(
               Sfera
              ) [Type]
              MultipleVarNoError(
                MultipleVarNoError(
                  SingleVarNoError(
                    NonArrayVarNoError(
                     s1
                    ) [NonArrayVarNoError]
                  ) [SingleVarNoError]
                  NonArrayVarNoError(
                   s2
                  ) [NonArrayVarNoError]
                ) [MultipleVarNoError]
                NonArrayVarNoError(
                 s3
                ) [NonArrayVarNoError]
              ) [MultipleVarNoError]
            ) [VarDNoError]
          ) [VarDeclListNoErrorHasItems]
          VarDNoError(
            Type(
             Kvadar
            ) [Type]
            MultipleVarNoError(
              MultipleVarNoError(
                SingleVarNoError(
                  NonArrayVarNoError(
                   k1
                  ) [NonArrayVarNoError]
                ) [SingleVarNoError]
                NonArrayVarNoError(
                 k2
                ) [NonArrayVarNoError]
              ) [MultipleVarNoError]
              NonArrayVarNoError(
               k3
              ) [NonArrayVarNoError]
            ) [MultipleVarNoError]
          ) [VarDNoError]
        ) [VarDeclListNoErrorHasItems]
        VarDNoError(
          Type(
           int
          ) [Type]
          SingleVarNoError(
            NonArrayVarNoError(
             t
            ) [NonArrayVarNoError]
          ) [SingleVarNoError]
        ) [VarDNoError]
      ) [VarDeclListNoErrorHasItems]
      StatementListHasStatements(
        StatementListHasStatements(
          StatementListHasStatements(
            StatementListHasStatements(
              StatementListHasStatements(
                StatementListHasStatements(
                  StatementListHasStatements(
                    StatementListHasStatements(
                      StatementListHasStatements(
                        StatementListHasStatements(
                          StatementListHasStatements(
                            StatementListHasStatements(
                              StatementListHasStatements(
                                StatementListHasStatements(
                                  StatementListHasStatements(
                                    StatementListHasStatements(
                                      StatementListHasStatements(
                                        StatementListHasStatements(
                                          StatementListHasStatements(
                                            StatementListHasStatements(
                                              StatementListHasStatements(
                                                StatementListHasStatements(
                                                  StatementListHasStatements(
                                                    StatementListHasStatements(
                                                      StatementListHasStatements(
                                                        StatementListHasStatements(
                                                          StatementListHasStatements(
                                                            StatementListHasStatements(
                                                              StatementListHasStatements(
                                                                StatementListHasStatements(
                                                                  StatementListHasStatements(
                                                                    StatementListHasStatements(
                                                                      StatementListHasStatements(
                                                                        StatementListHasStatements(
                                                                          StatementListHasStatements(
                                                                            StatementListHasStatements(
                                                                              StatementListHasStatements(
                                                                                StatementListHasStatements(
                                                                                  EmptyStatementList(
                                                                                  ) [EmptyStatementList]
                                                                                  StatementSingle(
                                                                                    DStatement(
                                                                                      DesignatorStatementAssign(
                                                                                        DesignatorAssign(
                                                                                          SingleDesignator(
                                                                                           predmeti
                                                                                          ) [SingleDesignator]
                                                                                          Assign(
                                                                                          ) [Assign]
                                                                                          SingleExpr(
                                                                                            SingleTerm(
                                                                                              TypeExprFactor(
                                                                                                Type(
                                                                                                 Predmet
                                                                                                ) [Type]
                                                                                                SingleExpr(
                                                                                                  SingleTerm(
                                                                                                    NumberFactor(
                                                                                                     6
                                                                                                    ) [NumberFactor]
                                                                                                  ) [SingleTerm]
                                                                                                ) [SingleExpr]
                                                                                              ) [TypeExprFactor]
                                                                                            ) [SingleTerm]
                                                                                          ) [SingleExpr]
                                                                                        ) [DesignatorAssign]
                                                                                      ) [DesignatorStatementAssign]
                                                                                    ) [DStatement]
                                                                                  ) [StatementSingle]
                                                                                ) [StatementListHasStatements]
                                                                                StatementSingle(
                                                                                  DStatement(
                                                                                    DesignatorStatementAssign(
                                                                                      DesignatorAssign(
                                                                                        SingleDesignator(
                                                                                         s1
                                                                                        ) [SingleDesignator]
                                                                                        Assign(
                                                                                        ) [Assign]
                                                                                        SingleExpr(
                                                                                          SingleTerm(
                                                                                            TypeFactor(
                                                                                              Type(
                                                                                               Sfera
                                                                                              ) [Type]
                                                                                            ) [TypeFactor]
                                                                                          ) [SingleTerm]
                                                                                        ) [SingleExpr]
                                                                                      ) [DesignatorAssign]
                                                                                    ) [DesignatorStatementAssign]
                                                                                  ) [DStatement]
                                                                                ) [StatementSingle]
                                                                              ) [StatementListHasStatements]
                                                                              StatementSingle(
                                                                                DStatement(
                                                                                  DesignatorStatementAssign(
                                                                                    DesignatorAssign(
                                                                                      SingleDesignator(
                                                                                       s2
                                                                                      ) [SingleDesignator]
                                                                                      Assign(
                                                                                      ) [Assign]
                                                                                      SingleExpr(
                                                                                        SingleTerm(
                                                                                          TypeFactor(
                                                                                            Type(
                                                                                             Sfera
                                                                                            ) [Type]
                                                                                          ) [TypeFactor]
                                                                                        ) [SingleTerm]
                                                                                      ) [SingleExpr]
                                                                                    ) [DesignatorAssign]
                                                                                  ) [DesignatorStatementAssign]
                                                                                ) [DStatement]
                                                                              ) [StatementSingle]
                                                                            ) [StatementListHasStatements]
                                                                            StatementSingle(
                                                                              DStatement(
                                                                                DesignatorStatementAssign(
                                                                                  DesignatorAssign(
                                                                                    SingleDesignator(
                                                                                     s3
                                                                                    ) [SingleDesignator]
                                                                                    Assign(
                                                                                    ) [Assign]
                                                                                    SingleExpr(
                                                                                      SingleTerm(
                                                                                        TypeFactor(
                                                                                          Type(
                                                                                           Sfera
                                                                                          ) [Type]
                                                                                        ) [TypeFactor]
                                                                                      ) [SingleTerm]
                                                                                    ) [SingleExpr]
                                                                                  ) [DesignatorAssign]
                                                                                ) [DesignatorStatementAssign]
                                                                              ) [DStatement]
                                                                            ) [StatementSingle]
                                                                          ) [StatementListHasStatements]
                                                                          StatementSingle(
                                                                            DStatement(
                                                                              DesignatorStatementAssign(
                                                                                DesignatorAssign(
                                                                                  SingleDesignator(
                                                                                   k1
                                                                                  ) [SingleDesignator]
                                                                                  Assign(
                                                                                  ) [Assign]
                                                                                  SingleExpr(
                                                                                    SingleTerm(
                                                                                      TypeFactor(
                                                                                        Type(
                                                                                         Kvadar
                                                                                        ) [Type]
                                                                                      ) [TypeFactor]
                                                                                    ) [SingleTerm]
                                                                                  ) [SingleExpr]
                                                                                ) [DesignatorAssign]
                                                                              ) [DesignatorStatementAssign]
                                                                            ) [DStatement]
                                                                          ) [StatementSingle]
                                                                        ) [StatementListHasStatements]
                                                                        StatementSingle(
                                                                          DStatement(
                                                                            DesignatorStatementAssign(
                                                                              DesignatorAssign(
                                                                                SingleDesignator(
                                                                                 k2
                                                                                ) [SingleDesignator]
                                                                                Assign(
                                                                                ) [Assign]
                                                                                SingleExpr(
                                                                                  SingleTerm(
                                                                                    TypeFactor(
                                                                                      Type(
                                                                                       Kvadar
                                                                                      ) [Type]
                                                                                    ) [TypeFactor]
                                                                                  ) [SingleTerm]
                                                                                ) [SingleExpr]
                                                                              ) [DesignatorAssign]
                                                                            ) [DesignatorStatementAssign]
                                                                          ) [DStatement]
                                                                        ) [StatementSingle]
                                                                      ) [StatementListHasStatements]
                                                                      StatementSingle(
                                                                        DStatement(
                                                                          DesignatorStatementAssign(
                                                                            DesignatorAssign(
                                                                              SingleDesignator(
                                                                               k3
                                                                              ) [SingleDesignator]
                                                                              Assign(
                                                                              ) [Assign]
                                                                              SingleExpr(
                                                                                SingleTerm(
                                                                                  TypeFactor(
                                                                                    Type(
                                                                                     Kvadar
                                                                                    ) [Type]
                                                                                  ) [TypeFactor]
                                                                                ) [SingleTerm]
                                                                              ) [SingleExpr]
                                                                            ) [DesignatorAssign]
                                                                          ) [DesignatorStatementAssign]
                                                                        ) [DStatement]
                                                                      ) [StatementSingle]
                                                                    ) [StatementListHasStatements]
                                                                    StatementSingle(
                                                                      DStatement(
                                                                        DesignatorStatementAct(
                                                                          MakeNewActParmsListDesignator(
                                                                            DesignatorMultiple(
                                                                              SingleDesignator(
                                                                               s1
                                                                              ) [SingleDesignator]
                                                                             postaviPoluprecnik
                                                                            ) [DesignatorMultiple]
                                                                          ) [MakeNewActParmsListDesignator]
                                                                          ActParsListExists(
                                                                            ActParsSingle(
                                                                              SingleExpr(
                                                                                SingleTerm(
                                                                                  NumberFactor(
                                                                                   1
                                                                                  ) [NumberFactor]
                                                                                ) [SingleTerm]
                                                                              ) [SingleExpr]
                                                                            ) [ActParsSingle]
                                                                          ) [ActParsListExists]
                                                                        ) [DesignatorStatementAct]
                                                                      ) [DStatement]
                                                                    ) [StatementSingle]
                                                                  ) [StatementListHasStatements]
                                                                  StatementSingle(
                                                                    DStatement(
                                                                      DesignatorStatementAct(
                                                                        MakeNewActParmsListDesignator(
                                                                          DesignatorMultiple(
                                                                            SingleDesignator(
                                                                             s2
                                                                            ) [SingleDesignator]
                                                                           postaviPoluprecnik
                                                                          ) [DesignatorMultiple]
                                                                        ) [MakeNewActParmsListDesignator]
                                                                        ActParsListExists(
                                                                          ActParsSingle(
                                                                            SingleExpr(
                                                                              SingleTerm(
                                                                                NumberFactor(
                                                                                 2
                                                                                ) [NumberFactor]
                                                                              ) [SingleTerm]
                                                                            ) [SingleExpr]
                                                                          ) [ActParsSingle]
                                                                        ) [ActParsListExists]
                                                                      ) [DesignatorStatementAct]
                                                                    ) [DStatement]
                                                                  ) [StatementSingle]
                                                                ) [StatementListHasStatements]
                                                                StatementSingle(
                                                                  DStatement(
                                                                    DesignatorStatementAct(
                                                                      MakeNewActParmsListDesignator(
                                                                        DesignatorMultiple(
                                                                          SingleDesignator(
                                                                           s3
                                                                          ) [SingleDesignator]
                                                                         postaviPoluprecnik
                                                                        ) [DesignatorMultiple]
                                                                      ) [MakeNewActParmsListDesignator]
                                                                      ActParsListExists(
                                                                        ActParsSingle(
                                                                          SingleExpr(
                                                                            SingleTerm(
                                                                              NumberFactor(
                                                                               3
                                                                              ) [NumberFactor]
                                                                            ) [SingleTerm]
                                                                          ) [SingleExpr]
                                                                        ) [ActParsSingle]
                                                                      ) [ActParsListExists]
                                                                    ) [DesignatorStatementAct]
                                                                  ) [DStatement]
                                                                ) [StatementSingle]
                                                              ) [StatementListHasStatements]
                                                              StatementSingle(
                                                                DStatement(
                                                                  DesignatorStatementAct(
                                                                    MakeNewActParmsListDesignator(
                                                                      DesignatorMultiple(
                                                                        SingleDesignator(
                                                                         k1
                                                                        ) [SingleDesignator]
                                                                       postaviStranice
                                                                      ) [DesignatorMultiple]
                                                                    ) [MakeNewActParmsListDesignator]
                                                                    ActParsListExists(
                                                                      ActParsMultiple(
                                                                        ActParsMultiple(
                                                                          ActParsSingle(
                                                                            SingleExpr(
                                                                              SingleTerm(
                                                                                NumberFactor(
                                                                                 1
                                                                                ) [NumberFactor]
                                                                              ) [SingleTerm]
                                                                            ) [SingleExpr]
                                                                          ) [ActParsSingle]
                                                                          SingleExpr(
                                                                            SingleTerm(
                                                                              NumberFactor(
                                                                               2
                                                                              ) [NumberFactor]
                                                                            ) [SingleTerm]
                                                                          ) [SingleExpr]
                                                                        ) [ActParsMultiple]
                                                                        SingleExpr(
                                                                          SingleTerm(
                                                                            NumberFactor(
                                                                             3
                                                                            ) [NumberFactor]
                                                                          ) [SingleTerm]
                                                                        ) [SingleExpr]
                                                                      ) [ActParsMultiple]
                                                                    ) [ActParsListExists]
                                                                  ) [DesignatorStatementAct]
                                                                ) [DStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListHasStatements]
                                                            StatementSingle(
                                                              DStatement(
                                                                DesignatorStatementAct(
                                                                  MakeNewActParmsListDesignator(
                                                                    DesignatorMultiple(
                                                                      SingleDesignator(
                                                                       k2
                                                                      ) [SingleDesignator]
                                                                     postaviStranice
                                                                    ) [DesignatorMultiple]
                                                                  ) [MakeNewActParmsListDesignator]
                                                                  ActParsListExists(
                                                                    ActParsMultiple(
                                                                      ActParsMultiple(
                                                                        ActParsSingle(
                                                                          SingleExpr(
                                                                            SingleTerm(
                                                                              NumberFactor(
                                                                               2
                                                                              ) [NumberFactor]
                                                                            ) [SingleTerm]
                                                                          ) [SingleExpr]
                                                                        ) [ActParsSingle]
                                                                        SingleExpr(
                                                                          SingleTerm(
                                                                            NumberFactor(
                                                                             3
                                                                            ) [NumberFactor]
                                                                          ) [SingleTerm]
                                                                        ) [SingleExpr]
                                                                      ) [ActParsMultiple]
                                                                      SingleExpr(
                                                                        SingleTerm(
                                                                          NumberFactor(
                                                                           4
                                                                          ) [NumberFactor]
                                                                        ) [SingleTerm]
                                                                      ) [SingleExpr]
                                                                    ) [ActParsMultiple]
                                                                  ) [ActParsListExists]
                                                                ) [DesignatorStatementAct]
                                                              ) [DStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListHasStatements]
                                                          StatementSingle(
                                                            DStatement(
                                                              DesignatorStatementAct(
                                                                MakeNewActParmsListDesignator(
                                                                  DesignatorMultiple(
                                                                    SingleDesignator(
                                                                     k3
                                                                    ) [SingleDesignator]
                                                                   postaviStranice
                                                                  ) [DesignatorMultiple]
                                                                ) [MakeNewActParmsListDesignator]
                                                                ActParsListExists(
                                                                  ActParsMultiple(
                                                                    ActParsMultiple(
                                                                      ActParsSingle(
                                                                        SingleExpr(
                                                                          SingleTerm(
                                                                            NumberFactor(
                                                                             3
                                                                            ) [NumberFactor]
                                                                          ) [SingleTerm]
                                                                        ) [SingleExpr]
                                                                      ) [ActParsSingle]
                                                                      SingleExpr(
                                                                        SingleTerm(
                                                                          NumberFactor(
                                                                           4
                                                                          ) [NumberFactor]
                                                                        ) [SingleTerm]
                                                                      ) [SingleExpr]
                                                                    ) [ActParsMultiple]
                                                                    SingleExpr(
                                                                      SingleTerm(
                                                                        NumberFactor(
                                                                         5
                                                                        ) [NumberFactor]
                                                                      ) [SingleTerm]
                                                                    ) [SingleExpr]
                                                                  ) [ActParsMultiple]
                                                                ) [ActParsListExists]
                                                              ) [DesignatorStatementAct]
                                                            ) [DStatement]
                                                          ) [StatementSingle]
                                                        ) [StatementListHasStatements]
                                                        StatementSingle(
                                                          DStatement(
                                                            DesignatorStatementAssign(
                                                              DesignatorAssign(
                                                                DesignatorArray(
                                                                  SingleDesignator(
                                                                   predmeti
                                                                  ) [SingleDesignator]
                                                                  SingleExpr(
                                                                    SingleTerm(
                                                                      NumberFactor(
                                                                       0
                                                                      ) [NumberFactor]
                                                                    ) [SingleTerm]
                                                                  ) [SingleExpr]
                                                                ) [DesignatorArray]
                                                                Assign(
                                                                ) [Assign]
                                                                SingleExpr(
                                                                  SingleTerm(
                                                                    DesignatorFactor(
                                                                      SingleDesignator(
                                                                       s1
                                                                      ) [SingleDesignator]
                                                                    ) [DesignatorFactor]
                                                                  ) [SingleTerm]
                                                                ) [SingleExpr]
                                                              ) [DesignatorAssign]
                                                            ) [DesignatorStatementAssign]
                                                          ) [DStatement]
                                                        ) [StatementSingle]
                                                      ) [StatementListHasStatements]
                                                      StatementSingle(
                                                        DStatement(
                                                          DesignatorStatementAssign(
                                                            DesignatorAssign(
                                                              DesignatorArray(
                                                                SingleDesignator(
                                                                 predmeti
                                                                ) [SingleDesignator]
                                                                SingleExpr(
                                                                  SingleTerm(
                                                                    NumberFactor(
                                                                     2
                                                                    ) [NumberFactor]
                                                                  ) [SingleTerm]
                                                                ) [SingleExpr]
                                                              ) [DesignatorArray]
                                                              Assign(
                                                              ) [Assign]
                                                              SingleExpr(
                                                                SingleTerm(
                                                                  DesignatorFactor(
                                                                    SingleDesignator(
                                                                     s2
                                                                    ) [SingleDesignator]
                                                                  ) [DesignatorFactor]
                                                                ) [SingleTerm]
                                                              ) [SingleExpr]
                                                            ) [DesignatorAssign]
                                                          ) [DesignatorStatementAssign]
                                                        ) [DStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListHasStatements]
                                                    StatementSingle(
                                                      DStatement(
                                                        DesignatorStatementAssign(
                                                          DesignatorAssign(
                                                            DesignatorArray(
                                                              SingleDesignator(
                                                               predmeti
                                                              ) [SingleDesignator]
                                                              SingleExpr(
                                                                SingleTerm(
                                                                  NumberFactor(
                                                                   4
                                                                  ) [NumberFactor]
                                                                ) [SingleTerm]
                                                              ) [SingleExpr]
                                                            ) [DesignatorArray]
                                                            Assign(
                                                            ) [Assign]
                                                            SingleExpr(
                                                              SingleTerm(
                                                                DesignatorFactor(
                                                                  SingleDesignator(
                                                                   s3
                                                                  ) [SingleDesignator]
                                                                ) [DesignatorFactor]
                                                              ) [SingleTerm]
                                                            ) [SingleExpr]
                                                          ) [DesignatorAssign]
                                                        ) [DesignatorStatementAssign]
                                                      ) [DStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListHasStatements]
                                                  StatementSingle(
                                                    DStatement(
                                                      DesignatorStatementAssign(
                                                        DesignatorAssign(
                                                          DesignatorArray(
                                                            SingleDesignator(
                                                             predmeti
                                                            ) [SingleDesignator]
                                                            SingleExpr(
                                                              SingleTerm(
                                                                NumberFactor(
                                                                 1
                                                                ) [NumberFactor]
                                                              ) [SingleTerm]
                                                            ) [SingleExpr]
                                                          ) [DesignatorArray]
                                                          Assign(
                                                          ) [Assign]
                                                          SingleExpr(
                                                            SingleTerm(
                                                              DesignatorFactor(
                                                                SingleDesignator(
                                                                 k1
                                                                ) [SingleDesignator]
                                                              ) [DesignatorFactor]
                                                            ) [SingleTerm]
                                                          ) [SingleExpr]
                                                        ) [DesignatorAssign]
                                                      ) [DesignatorStatementAssign]
                                                    ) [DStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListHasStatements]
                                                StatementSingle(
                                                  DStatement(
                                                    DesignatorStatementAssign(
                                                      DesignatorAssign(
                                                        DesignatorArray(
                                                          SingleDesignator(
                                                           predmeti
                                                          ) [SingleDesignator]
                                                          SingleExpr(
                                                            SingleTerm(
                                                              NumberFactor(
                                                               3
                                                              ) [NumberFactor]
                                                            ) [SingleTerm]
                                                          ) [SingleExpr]
                                                        ) [DesignatorArray]
                                                        Assign(
                                                        ) [Assign]
                                                        SingleExpr(
                                                          SingleTerm(
                                                            DesignatorFactor(
                                                              SingleDesignator(
                                                               k2
                                                              ) [SingleDesignator]
                                                            ) [DesignatorFactor]
                                                          ) [SingleTerm]
                                                        ) [SingleExpr]
                                                      ) [DesignatorAssign]
                                                    ) [DesignatorStatementAssign]
                                                  ) [DStatement]
                                                ) [StatementSingle]
                                              ) [StatementListHasStatements]
                                              StatementSingle(
                                                DStatement(
                                                  DesignatorStatementAssign(
                                                    DesignatorAssign(
                                                      DesignatorArray(
                                                        SingleDesignator(
                                                         predmeti
                                                        ) [SingleDesignator]
                                                        SingleExpr(
                                                          SingleTerm(
                                                            NumberFactor(
                                                             5
                                                            ) [NumberFactor]
                                                          ) [SingleTerm]
                                                        ) [SingleExpr]
                                                      ) [DesignatorArray]
                                                      Assign(
                                                      ) [Assign]
                                                      SingleExpr(
                                                        SingleTerm(
                                                          DesignatorFactor(
                                                            SingleDesignator(
                                                             k3
                                                            ) [SingleDesignator]
                                                          ) [DesignatorFactor]
                                                        ) [SingleTerm]
                                                      ) [SingleExpr]
                                                    ) [DesignatorAssign]
                                                  ) [DesignatorStatementAssign]
                                                ) [DStatement]
                                              ) [StatementSingle]
                                            ) [StatementListHasStatements]
                                            StatementSingle(
                                              ReadStatement(
                                                SingleDesignator(
                                                 t
                                                ) [SingleDesignator]
                                              ) [ReadStatement]
                                            ) [StatementSingle]
                                          ) [StatementListHasStatements]
                                          StatementSingle(
                                            DStatement(
                                              DesignatorStatementAssign(
                                                DesignatorAssign(
                                                  SingleDesignator(
                                                   i
                                                  ) [SingleDesignator]
                                                  Assign(
                                                  ) [Assign]
                                                  SingleExpr(
                                                    SingleTerm(
                                                      NumberFactor(
                                                       0
                                                      ) [NumberFactor]
                                                    ) [SingleTerm]
                                                  ) [SingleExpr]
                                                ) [DesignatorAssign]
                                              ) [DesignatorStatementAssign]
                                            ) [DStatement]
                                          ) [StatementSingle]
                                        ) [StatementListHasStatements]
                                        StatementSingle(
                                          DoWhileStatement(
                                            DoForCheck(
                                            ) [DoForCheck]
                                            StatementsMultiple(
                                              Block(
                                                StatementListHasStatements(
                                                  StatementListHasStatements(
                                                    EmptyStatementList(
                                                    ) [EmptyStatementList]
                                                    StatementSingle(
                                                      DStatement(
                                                        DesignatorStatementAct(
                                                          MakeNewActParmsListDesignator(
                                                            DesignatorMultiple(
                                                              DesignatorArray(
                                                                SingleDesignator(
                                                                 predmeti
                                                                ) [SingleDesignator]
                                                                SingleExpr(
                                                                  SingleTerm(
                                                                    DesignatorFactor(
                                                                      SingleDesignator(
                                                                       i
                                                                      ) [SingleDesignator]
                                                                    ) [DesignatorFactor]
                                                                  ) [SingleTerm]
                                                                ) [SingleExpr]
                                                              ) [DesignatorArray]
                                                             postaviTezinu
                                                            ) [DesignatorMultiple]
                                                          ) [MakeNewActParmsListDesignator]
                                                          ActParsListExists(
                                                            ActParsSingle(
                                                              SingleExpr(
                                                                SingleTerm(
                                                                  DesignatorFactor(
                                                                    SingleDesignator(
                                                                     t
                                                                    ) [SingleDesignator]
                                                                  ) [DesignatorFactor]
                                                                ) [SingleTerm]
                                                              ) [SingleExpr]
                                                            ) [ActParsSingle]
                                                          ) [ActParsListExists]
                                                        ) [DesignatorStatementAct]
                                                      ) [DStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListHasStatements]
                                                  StatementSingle(
                                                    DStatement(
                                                      DesignatorStatementInc(
                                                        SingleDesignator(
                                                         i
                                                        ) [SingleDesignator]
                                                      ) [DesignatorStatementInc]
                                                    ) [DStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListHasStatements]
                                              ) [Block]
                                            ) [StatementsMultiple]
                                            WhileForGen(
                                            ) [WhileForGen]
                                            SingleCondition(
                                              SingleCondTerm(
                                                CondFactRelop(
                                                  SingleExpr(
                                                    SingleTerm(
                                                      DesignatorFactor(
                                                        SingleDesignator(
                                                         i
                                                        ) [SingleDesignator]
                                                      ) [DesignatorFactor]
                                                    ) [SingleTerm]
                                                  ) [SingleExpr]
                                                  RelOpLss(
                                                  ) [RelOpLss]
                                                  SingleExpr(
                                                    SingleTerm(
                                                      NumberFactor(
                                                       6
                                                      ) [NumberFactor]
                                                    ) [SingleTerm]
                                                  ) [SingleExpr]
                                                ) [CondFactRelop]
                                              ) [SingleCondTerm]
                                            ) [SingleCondition]
                                          ) [DoWhileStatement]
                                        ) [StatementSingle]
                                      ) [StatementListHasStatements]
                                      StatementSingle(
                                        DStatement(
                                          DesignatorStatementAssign(
                                            DesignatorAssign(
                                              SingleDesignator(
                                               zapreminaS
                                              ) [SingleDesignator]
                                              Assign(
                                              ) [Assign]
                                              SingleExpr(
                                                SingleTerm(
                                                  NumberFactor(
                                                   0
                                                  ) [NumberFactor]
                                                ) [SingleTerm]
                                              ) [SingleExpr]
                                            ) [DesignatorAssign]
                                          ) [DesignatorStatementAssign]
                                        ) [DStatement]
                                      ) [StatementSingle]
                                    ) [StatementListHasStatements]
                                    StatementSingle(
                                      DStatement(
                                        DesignatorStatementAssign(
                                          DesignatorAssign(
                                            SingleDesignator(
                                             tezinaS
                                            ) [SingleDesignator]
                                            Assign(
                                            ) [Assign]
                                            SingleExpr(
                                              SingleTerm(
                                                NumberFactor(
                                                 0
                                                ) [NumberFactor]
                                              ) [SingleTerm]
                                            ) [SingleExpr]
                                          ) [DesignatorAssign]
                                        ) [DesignatorStatementAssign]
                                      ) [DStatement]
                                    ) [StatementSingle]
                                  ) [StatementListHasStatements]
                                  StatementSingle(
                                    DStatement(
                                      DesignatorStatementAssign(
                                        DesignatorAssign(
                                          SingleDesignator(
                                           i
                                          ) [SingleDesignator]
                                          Assign(
                                          ) [Assign]
                                          SingleExpr(
                                            SingleTerm(
                                              NumberFactor(
                                               1
                                              ) [NumberFactor]
                                            ) [SingleTerm]
                                          ) [SingleExpr]
                                        ) [DesignatorAssign]
                                      ) [DesignatorStatementAssign]
                                    ) [DStatement]
                                  ) [StatementSingle]
                                ) [StatementListHasStatements]
                                StatementSingle(
                                  DoWhileStatement(
                                    DoForCheck(
                                    ) [DoForCheck]
                                    StatementsMultiple(
                                      Block(
                                        StatementListHasStatements(
                                          StatementListHasStatements(
                                            StatementListHasStatements(
                                              StatementListHasStatements(
                                                StatementListHasStatements(
                                                  EmptyStatementList(
                                                  ) [EmptyStatementList]
                                                  StatementSingle(
                                                    IfStatement(
                                                      IfForGen(
                                                      ) [IfForGen]
                                                      IfCondition(
                                                        SingleCondition(
                                                          SingleCondTerm(
                                                            CondFactRelop(
                                                              SingleExpr(
                                                                TermMultiple(
                                                                  SingleTerm(
                                                                    DesignatorFactor(
                                                                      SingleDesignator(
                                                                       i
                                                                      ) [SingleDesignator]
                                                                    ) [DesignatorFactor]
                                                                  ) [SingleTerm]
                                                                  MulOpPercent(
                                                                  ) [MulOpPercent]
                                                                  NumberFactor(
                                                                   2
                                                                  ) [NumberFactor]
                                                                ) [TermMultiple]
                                                              ) [SingleExpr]
                                                              RelOpEqu(
                                                              ) [RelOpEqu]
                                                              SingleExpr(
                                                                SingleTerm(
                                                                  NumberFactor(
                                                                   0
                                                                  ) [NumberFactor]
                                                                ) [SingleTerm]
                                                              ) [SingleExpr]
                                                            ) [CondFactRelop]
                                                          ) [SingleCondTerm]
                                                        ) [SingleCondition]
                                                      ) [IfCondition]
                                                      StatementsMultiple(
                                                        Block(
                                                          StatementListHasStatements(
                                                            StatementListHasStatements(
                                                              EmptyStatementList(
                                                              ) [EmptyStatementList]
                                                              StatementSingle(
                                                                DStatement(
                                                                  DesignatorStatementInc(
                                                                    SingleDesignator(
                                                                     i
                                                                    ) [SingleDesignator]
                                                                  ) [DesignatorStatementInc]
                                                                ) [DStatement]
                                                              ) [StatementSingle]
                                                            ) [StatementListHasStatements]
                                                            StatementSingle(
                                                              ContinueStatement(
                                                              ) [ContinueStatement]
                                                            ) [StatementSingle]
                                                          ) [StatementListHasStatements]
                                                        ) [Block]
                                                      ) [StatementsMultiple]
                                                    ) [IfStatement]
                                                  ) [StatementSingle]
                                                ) [StatementListHasStatements]
                                                StatementSingle(
                                                  DStatement(
                                                    DesignatorStatementAssign(
                                                      DesignatorAssign(
                                                        SingleDesignator(
                                                         zapreminaS
                                                        ) [SingleDesignator]
                                                        Assign(
                                                        ) [Assign]
                                                        ExprMultiple(
                                                          SingleExpr(
                                                            SingleTerm(
                                                              DesignatorFactor(
                                                                SingleDesignator(
                                                                 zapreminaS
                                                                ) [SingleDesignator]
                                                              ) [DesignatorFactor]
                                                            ) [SingleTerm]
                                                          ) [SingleExpr]
                                                          AddOpPlus(
                                                          ) [AddOpPlus]
                                                          SingleTerm(
                                                            DesignatorActParsFactor(
                                                              MakeNewActParmsListDesignator(
                                                                DesignatorMultiple(
                                                                  DesignatorArray(
                                                                    SingleDesignator(
                                                                     predmeti
                                                                    ) [SingleDesignator]
                                                                    ExprMultiple(
                                                                      SingleExpr(
                                                                        SingleTerm(
                                                                          DesignatorFactor(
                                                                            SingleDesignator(
                                                                             i
                                                                            ) [SingleDesignator]
                                                                          ) [DesignatorFactor]
                                                                        ) [SingleTerm]
                                                                      ) [SingleExpr]
                                                                      AddOpMinus(
                                                                      ) [AddOpMinus]
                                                                      SingleTerm(
                                                                        NumberFactor(
                                                                         1
                                                                        ) [NumberFactor]
                                                                      ) [SingleTerm]
                                                                    ) [ExprMultiple]
                                                                  ) [DesignatorArray]
                                                                 zapremina
                                                                ) [DesignatorMultiple]
                                                              ) [MakeNewActParmsListDesignator]
                                                              EmptyActParsList(
                                                              ) [EmptyActParsList]
                                                            ) [DesignatorActParsFactor]
                                                          ) [SingleTerm]
                                                        ) [ExprMultiple]
                                                      ) [DesignatorAssign]
                                                    ) [DesignatorStatementAssign]
                                                  ) [DStatement]
                                                ) [StatementSingle]
                                              ) [StatementListHasStatements]
                                              StatementSingle(
                                                DStatement(
                                                  DesignatorStatementAssign(
                                                    DesignatorAssign(
                                                      SingleDesignator(
                                                       tezinaS
                                                      ) [SingleDesignator]
                                                      Assign(
                                                      ) [Assign]
                                                      ExprMultiple(
                                                        SingleExpr(
                                                          SingleTerm(
                                                            DesignatorFactor(
                                                              SingleDesignator(
                                                               tezinaS
                                                              ) [SingleDesignator]
                                                            ) [DesignatorFactor]
                                                          ) [SingleTerm]
                                                        ) [SingleExpr]
                                                        AddOpPlus(
                                                        ) [AddOpPlus]
                                                        SingleTerm(
                                                          DesignatorActParsFactor(
                                                            MakeNewActParmsListDesignator(
                                                              DesignatorMultiple(
                                                                DesignatorArray(
                                                                  SingleDesignator(
                                                                   predmeti
                                                                  ) [SingleDesignator]
                                                                  ExprMultiple(
                                                                    SingleExpr(
                                                                      SingleTerm(
                                                                        DesignatorFactor(
                                                                          SingleDesignator(
                                                                           i
                                                                          ) [SingleDesignator]
                                                                        ) [DesignatorFactor]
                                                                      ) [SingleTerm]
                                                                    ) [SingleExpr]
                                                                    AddOpMinus(
                                                                    ) [AddOpMinus]
                                                                    SingleTerm(
                                                                      NumberFactor(
                                                                       1
                                                                      ) [NumberFactor]
                                                                    ) [SingleTerm]
                                                                  ) [ExprMultiple]
                                                                ) [DesignatorArray]
                                                               Q
                                                              ) [DesignatorMultiple]
                                                            ) [MakeNewActParmsListDesignator]
                                                            EmptyActParsList(
                                                            ) [EmptyActParsList]
                                                          ) [DesignatorActParsFactor]
                                                        ) [SingleTerm]
                                                      ) [ExprMultiple]
                                                    ) [DesignatorAssign]
                                                  ) [DesignatorStatementAssign]
                                                ) [DStatement]
                                              ) [StatementSingle]
                                            ) [StatementListHasStatements]
                                            StatementSingle(
                                              DStatement(
                                                DesignatorStatementAct(
                                                  MakeNewActParmsListDesignator(
                                                    SingleDesignator(
                                                     ispis
                                                    ) [SingleDesignator]
                                                  ) [MakeNewActParmsListDesignator]
                                                  ActParsListExists(
                                                    ActParsSingle(
                                                      SingleExpr(
                                                        SingleTerm(
                                                          DesignatorFactor(
                                                            DesignatorArray(
                                                              SingleDesignator(
                                                               predmeti
                                                              ) [SingleDesignator]
                                                              ExprMultiple(
                                                                SingleExpr(
                                                                  SingleTerm(
                                                                    DesignatorFactor(
                                                                      SingleDesignator(
                                                                       i
                                                                      ) [SingleDesignator]
                                                                    ) [DesignatorFactor]
                                                                  ) [SingleTerm]
                                                                ) [SingleExpr]
                                                                AddOpMinus(
                                                                ) [AddOpMinus]
                                                                SingleTerm(
                                                                  NumberFactor(
                                                                   1
                                                                  ) [NumberFactor]
                                                                ) [SingleTerm]
                                                              ) [ExprMultiple]
                                                            ) [DesignatorArray]
                                                          ) [DesignatorFactor]
                                                        ) [SingleTerm]
                                                      ) [SingleExpr]
                                                    ) [ActParsSingle]
                                                  ) [ActParsListExists]
                                                ) [DesignatorStatementAct]
                                              ) [DStatement]
                                            ) [StatementSingle]
                                          ) [StatementListHasStatements]
                                          StatementSingle(
                                            DStatement(
                                              DesignatorStatementInc(
                                                SingleDesignator(
                                                 i
                                                ) [SingleDesignator]
                                              ) [DesignatorStatementInc]
                                            ) [DStatement]
                                          ) [StatementSingle]
                                        ) [StatementListHasStatements]
                                      ) [Block]
                                    ) [StatementsMultiple]
                                    WhileForGen(
                                    ) [WhileForGen]
                                    SingleCondition(
                                      SingleCondTerm(
                                        CondFactRelop(
                                          SingleExpr(
                                            SingleTerm(
                                              DesignatorFactor(
                                                SingleDesignator(
                                                 i
                                                ) [SingleDesignator]
                                              ) [DesignatorFactor]
                                            ) [SingleTerm]
                                          ) [SingleExpr]
                                          RelOpLeq(
                                          ) [RelOpLeq]
                                          SingleExpr(
                                            SingleTerm(
                                              NumberFactor(
                                               6
                                              ) [NumberFactor]
                                            ) [SingleTerm]
                                          ) [SingleExpr]
                                        ) [CondFactRelop]
                                      ) [SingleCondTerm]
                                    ) [SingleCondition]
                                  ) [DoWhileStatement]
                                ) [StatementSingle]
                              ) [StatementListHasStatements]
                              StatementSingle(
                                DStatement(
                                  DesignatorStatementAssign(
                                    DesignatorAssign(
                                      SingleDesignator(
                                       zapreminaK
                                      ) [SingleDesignator]
                                      Assign(
                                      ) [Assign]
                                      SingleExpr(
                                        SingleTerm(
                                          NumberFactor(
                                           0
                                          ) [NumberFactor]
                                        ) [SingleTerm]
                                      ) [SingleExpr]
                                    ) [DesignatorAssign]
                                  ) [DesignatorStatementAssign]
                                ) [DStatement]
                              ) [StatementSingle]
                            ) [StatementListHasStatements]
                            StatementSingle(
                              DStatement(
                                DesignatorStatementAssign(
                                  DesignatorAssign(
                                    SingleDesignator(
                                     tezinaK
                                    ) [SingleDesignator]
                                    Assign(
                                    ) [Assign]
                                    SingleExpr(
                                      SingleTerm(
                                        NumberFactor(
                                         0
                                        ) [NumberFactor]
                                      ) [SingleTerm]
                                    ) [SingleExpr]
                                  ) [DesignatorAssign]
                                ) [DesignatorStatementAssign]
                              ) [DStatement]
                            ) [StatementSingle]
                          ) [StatementListHasStatements]
                          StatementSingle(
                            DStatement(
                              DesignatorStatementAssign(
                                DesignatorAssign(
                                  SingleDesignator(
                                   i
                                  ) [SingleDesignator]
                                  Assign(
                                  ) [Assign]
                                  SingleExpr(
                                    SingleTerm(
                                      NumberFactor(
                                       1
                                      ) [NumberFactor]
                                    ) [SingleTerm]
                                  ) [SingleExpr]
                                ) [DesignatorAssign]
                              ) [DesignatorStatementAssign]
                            ) [DStatement]
                          ) [StatementSingle]
                        ) [StatementListHasStatements]
                        StatementSingle(
                          DoWhileStatement(
                            DoForCheck(
                            ) [DoForCheck]
                            StatementsMultiple(
                              Block(
                                StatementListHasStatements(
                                  StatementListHasStatements(
                                    StatementListHasStatements(
                                      StatementListHasStatements(
                                        StatementListHasStatements(
                                          EmptyStatementList(
                                          ) [EmptyStatementList]
                                          StatementSingle(
                                            IfStatement(
                                              IfForGen(
                                              ) [IfForGen]
                                              IfCondition(
                                                SingleCondition(
                                                  SingleCondTerm(
                                                    CondFactRelop(
                                                      SingleExpr(
                                                        TermMultiple(
                                                          SingleTerm(
                                                            DesignatorFactor(
                                                              SingleDesignator(
                                                               i
                                                              ) [SingleDesignator]
                                                            ) [DesignatorFactor]
                                                          ) [SingleTerm]
                                                          MulOpPercent(
                                                          ) [MulOpPercent]
                                                          NumberFactor(
                                                           2
                                                          ) [NumberFactor]
                                                        ) [TermMultiple]
                                                      ) [SingleExpr]
                                                      RelOpEqu(
                                                      ) [RelOpEqu]
                                                      SingleExpr(
                                                        SingleTerm(
                                                          NumberFactor(
                                                           1
                                                          ) [NumberFactor]
                                                        ) [SingleTerm]
                                                      ) [SingleExpr]
                                                    ) [CondFactRelop]
                                                  ) [SingleCondTerm]
                                                ) [SingleCondition]
                                              ) [IfCondition]
                                              StatementsMultiple(
                                                Block(
                                                  StatementListHasStatements(
                                                    StatementListHasStatements(
                                                      EmptyStatementList(
                                                      ) [EmptyStatementList]
                                                      StatementSingle(
                                                        DStatement(
                                                          DesignatorStatementInc(
                                                            SingleDesignator(
                                                             i
                                                            ) [SingleDesignator]
                                                          ) [DesignatorStatementInc]
                                                        ) [DStatement]
                                                      ) [StatementSingle]
                                                    ) [StatementListHasStatements]
                                                    StatementSingle(
                                                      ContinueStatement(
                                                      ) [ContinueStatement]
                                                    ) [StatementSingle]
                                                  ) [StatementListHasStatements]
                                                ) [Block]
                                              ) [StatementsMultiple]
                                            ) [IfStatement]
                                          ) [StatementSingle]
                                        ) [StatementListHasStatements]
                                        StatementSingle(
                                          DStatement(
                                            DesignatorStatementAssign(
                                              DesignatorAssign(
                                                SingleDesignator(
                                                 zapreminaS
                                                ) [SingleDesignator]
                                                Assign(
                                                ) [Assign]
                                                ExprMultiple(
                                                  SingleExpr(
                                                    SingleTerm(
                                                      DesignatorFactor(
                                                        SingleDesignator(
                                                         zapreminaS
                                                        ) [SingleDesignator]
                                                      ) [DesignatorFactor]
                                                    ) [SingleTerm]
                                                  ) [SingleExpr]
                                                  AddOpPlus(
                                                  ) [AddOpPlus]
                                                  SingleTerm(
                                                    DesignatorActParsFactor(
                                                      MakeNewActParmsListDesignator(
                                                        DesignatorMultiple(
                                                          DesignatorArray(
                                                            SingleDesignator(
                                                             predmeti
                                                            ) [SingleDesignator]
                                                            ExprMultiple(
                                                              SingleExpr(
                                                                SingleTerm(
                                                                  DesignatorFactor(
                                                                    SingleDesignator(
                                                                     i
                                                                    ) [SingleDesignator]
                                                                  ) [DesignatorFactor]
                                                                ) [SingleTerm]
                                                              ) [SingleExpr]
                                                              AddOpMinus(
                                                              ) [AddOpMinus]
                                                              SingleTerm(
                                                                NumberFactor(
                                                                 1
                                                                ) [NumberFactor]
                                                              ) [SingleTerm]
                                                            ) [ExprMultiple]
                                                          ) [DesignatorArray]
                                                         zapremina
                                                        ) [DesignatorMultiple]
                                                      ) [MakeNewActParmsListDesignator]
                                                      EmptyActParsList(
                                                      ) [EmptyActParsList]
                                                    ) [DesignatorActParsFactor]
                                                  ) [SingleTerm]
                                                ) [ExprMultiple]
                                              ) [DesignatorAssign]
                                            ) [DesignatorStatementAssign]
                                          ) [DStatement]
                                        ) [StatementSingle]
                                      ) [StatementListHasStatements]
                                      StatementSingle(
                                        DStatement(
                                          DesignatorStatementAssign(
                                            DesignatorAssign(
                                              SingleDesignator(
                                               tezinaS
                                              ) [SingleDesignator]
                                              Assign(
                                              ) [Assign]
                                              ExprMultiple(
                                                SingleExpr(
                                                  SingleTerm(
                                                    DesignatorFactor(
                                                      SingleDesignator(
                                                       tezinaS
                                                      ) [SingleDesignator]
                                                    ) [DesignatorFactor]
                                                  ) [SingleTerm]
                                                ) [SingleExpr]
                                                AddOpPlus(
                                                ) [AddOpPlus]
                                                SingleTerm(
                                                  DesignatorActParsFactor(
                                                    MakeNewActParmsListDesignator(
                                                      DesignatorMultiple(
                                                        DesignatorArray(
                                                          SingleDesignator(
                                                           predmeti
                                                          ) [SingleDesignator]
                                                          ExprMultiple(
                                                            SingleExpr(
                                                              SingleTerm(
                                                                DesignatorFactor(
                                                                  SingleDesignator(
                                                                   i
                                                                  ) [SingleDesignator]
                                                                ) [DesignatorFactor]
                                                              ) [SingleTerm]
                                                            ) [SingleExpr]
                                                            AddOpMinus(
                                                            ) [AddOpMinus]
                                                            SingleTerm(
                                                              NumberFactor(
                                                               1
                                                              ) [NumberFactor]
                                                            ) [SingleTerm]
                                                          ) [ExprMultiple]
                                                        ) [DesignatorArray]
                                                       Q
                                                      ) [DesignatorMultiple]
                                                    ) [MakeNewActParmsListDesignator]
                                                    EmptyActParsList(
                                                    ) [EmptyActParsList]
                                                  ) [DesignatorActParsFactor]
                                                ) [SingleTerm]
                                              ) [ExprMultiple]
                                            ) [DesignatorAssign]
                                          ) [DesignatorStatementAssign]
                                        ) [DStatement]
                                      ) [StatementSingle]
                                    ) [StatementListHasStatements]
                                    StatementSingle(
                                      DStatement(
                                        DesignatorStatementAct(
                                          MakeNewActParmsListDesignator(
                                            SingleDesignator(
                                             ispis
                                            ) [SingleDesignator]
                                          ) [MakeNewActParmsListDesignator]
                                          ActParsListExists(
                                            ActParsSingle(
                                              SingleExpr(
                                                SingleTerm(
                                                  DesignatorFactor(
                                                    DesignatorArray(
                                                      SingleDesignator(
                                                       predmeti
                                                      ) [SingleDesignator]
                                                      ExprMultiple(
                                                        SingleExpr(
                                                          SingleTerm(
                                                            DesignatorFactor(
                                                              SingleDesignator(
                                                               i
                                                              ) [SingleDesignator]
                                                            ) [DesignatorFactor]
                                                          ) [SingleTerm]
                                                        ) [SingleExpr]
                                                        AddOpMinus(
                                                        ) [AddOpMinus]
                                                        SingleTerm(
                                                          NumberFactor(
                                                           1
                                                          ) [NumberFactor]
                                                        ) [SingleTerm]
                                                      ) [ExprMultiple]
                                                    ) [DesignatorArray]
                                                  ) [DesignatorFactor]
                                                ) [SingleTerm]
                                              ) [SingleExpr]
                                            ) [ActParsSingle]
                                          ) [ActParsListExists]
                                        ) [DesignatorStatementAct]
                                      ) [DStatement]
                                    ) [StatementSingle]
                                  ) [StatementListHasStatements]
                                  StatementSingle(
                                    DStatement(
                                      DesignatorStatementInc(
                                        SingleDesignator(
                                         i
                                        ) [SingleDesignator]
                                      ) [DesignatorStatementInc]
                                    ) [DStatement]
                                  ) [StatementSingle]
                                ) [StatementListHasStatements]
                              ) [Block]
                            ) [StatementsMultiple]
                            WhileForGen(
                            ) [WhileForGen]
                            SingleCondition(
                              SingleCondTerm(
                                CondFactRelop(
                                  SingleExpr(
                                    SingleTerm(
                                      DesignatorFactor(
                                        SingleDesignator(
                                         i
                                        ) [SingleDesignator]
                                      ) [DesignatorFactor]
                                    ) [SingleTerm]
                                  ) [SingleExpr]
                                  RelOpLeq(
                                  ) [RelOpLeq]
                                  SingleExpr(
                                    SingleTerm(
                                      NumberFactor(
                                       6
                                      ) [NumberFactor]
                                    ) [SingleTerm]
                                  ) [SingleExpr]
                                ) [CondFactRelop]
                              ) [SingleCondTerm]
                            ) [SingleCondition]
                          ) [DoWhileStatement]
                        ) [StatementSingle]
                      ) [StatementListHasStatements]
                      StatementSingle(
                        PrintNoNumStatement(
                          SingleExpr(
                            SingleTerm(
                              DesignatorFactor(
                                SingleDesignator(
                                 zapreminaS
                                ) [SingleDesignator]
                              ) [DesignatorFactor]
                            ) [SingleTerm]
                          ) [SingleExpr]
                        ) [PrintNoNumStatement]
                      ) [StatementSingle]
                    ) [StatementListHasStatements]
                    StatementSingle(
                      PrintNoNumStatement(
                        SingleExpr(
                          SingleTerm(
                            DesignatorFactor(
                              SingleDesignator(
                               eol
                              ) [SingleDesignator]
                            ) [DesignatorFactor]
                          ) [SingleTerm]
                        ) [SingleExpr]
                      ) [PrintNoNumStatement]
                    ) [StatementSingle]
                  ) [StatementListHasStatements]
                  StatementSingle(
                    PrintNoNumStatement(
                      SingleExpr(
                        SingleTerm(
                          DesignatorFactor(
                            SingleDesignator(
                             zapreminaK
                            ) [SingleDesignator]
                          ) [DesignatorFactor]
                        ) [SingleTerm]
                      ) [SingleExpr]
                    ) [PrintNoNumStatement]
                  ) [StatementSingle]
                ) [StatementListHasStatements]
                StatementSingle(
                  PrintNoNumStatement(
                    SingleExpr(
                      SingleTerm(
                        DesignatorFactor(
                          SingleDesignator(
                           eol
                          ) [SingleDesignator]
                        ) [DesignatorFactor]
                      ) [SingleTerm]
                    ) [SingleExpr]
                  ) [PrintNoNumStatement]
                ) [StatementSingle]
              ) [StatementListHasStatements]
              StatementSingle(
                PrintNoNumStatement(
                  SingleExpr(
                    SingleTerm(
                      DesignatorFactor(
                        SingleDesignator(
                         tezinaS
                        ) [SingleDesignator]
                      ) [DesignatorFactor]
                    ) [SingleTerm]
                  ) [SingleExpr]
                ) [PrintNoNumStatement]
              ) [StatementSingle]
            ) [StatementListHasStatements]
            StatementSingle(
              PrintNoNumStatement(
                SingleExpr(
                  SingleTerm(
                    DesignatorFactor(
                      SingleDesignator(
                       eol
                      ) [SingleDesignator]
                    ) [DesignatorFactor]
                  ) [SingleTerm]
                ) [SingleExpr]
              ) [PrintNoNumStatement]
            ) [StatementSingle]
          ) [StatementListHasStatements]
          StatementSingle(
            PrintNoNumStatement(
              SingleExpr(
                SingleTerm(
                  DesignatorFactor(
                    SingleDesignator(
                     tezinaK
                    ) [SingleDesignator]
                  ) [DesignatorFactor]
                ) [SingleTerm]
              ) [SingleExpr]
            ) [PrintNoNumStatement]
          ) [StatementSingle]
        ) [StatementListHasStatements]
        StatementSingle(
          PrintNoNumStatement(
            SingleExpr(
              SingleTerm(
                DesignatorFactor(
                  SingleDesignator(
                   eol
                  ) [SingleDesignator]
                ) [DesignatorFactor]
              ) [SingleTerm]
            ) [SingleExpr]
          ) [PrintNoNumStatement]
        ) [StatementSingle]
      ) [StatementListHasStatements]
    ) [MethodDecl]
  ) [MethodDList]
) [Program]
INFO  20:27:51,111 - ==================SEMANTICKA OBRADA====================
INFO  20:27:51,154 - Pristup polju Fld koefTezine: int, 2, 1  na liniji 15
INFO  20:27:51,155 - Pristup this parametru Var this: , 0, 1 
INFO  20:27:51,155 - Pristup polju Fld tezina: int, 1, 1  na liniji 17
INFO  20:27:51,157 - Pristup parametru metode Var tezina: int, 1, 1  na liniji 17
INFO  20:27:51,157 - Pristup polju Fld koefTezine: int, 2, 1  na liniji 17
INFO  20:27:51,157 - Pristup polju Fld tezina: int, 1, 1  na liniji 18
INFO  20:27:51,158 - Poziv metode koja pripada klasi Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
 na liniji 20
INFO  20:27:51,158 - Pristup polju Fld tezina: int, 1, 1  na liniji 20
INFO  20:27:51,158 - Pristup this parametru Var this: , 0, 1 
INFO  20:27:51,158 - Pristup polju Fld vrsta: char, 3, 1  na liniji 21
INFO  20:27:51,158 - Pristup parametru metode Var vrsta: char, 1, 1  na liniji 21
INFO  20:27:51,158 - Pristup polju Fld vrsta: char, 3, 1  na liniji 22
INFO  20:27:51,158 - Pristup polju Fld tezina: int, 1, 1  na liniji 23
INFO  20:27:51,158 - Pristup polju Fld vrsta: char, 3, 1  na liniji 25
INFO  20:27:51,158 - Poziv metode koja pripada klasi Meth Q: int, 0, 1 
   Var this: , 0, 1 
 na liniji 26
INFO  20:27:51,159 - Poziv konstruktora nadklase : Meth Predmet: notype, 0, 1 
   Var this: , 0, 1 
 na liniji 36
INFO  20:27:51,159 - Pristup polju Fld vrsta: char, 3, 1  na liniji 37
INFO  20:27:51,160 - Pristup this parametru Var this: , 0, 1 
INFO  20:27:51,160 - Pristup polju Fld r: int, 4, 1  na liniji 40
INFO  20:27:51,160 - Pristup parametru metode Var r: int, 1, 1  na liniji 40
INFO  20:27:51,161 - Pristup lokalnoj promenljivi Var z: int, 1, 1  na liniji 45
INFO  20:27:51,161 - Pristup lokalnoj promenljivi Var z: int, 1, 1  na liniji 46
INFO  20:27:51,161 - Pristup polju Fld r: int, 4, 1  na liniji 46
INFO  20:27:51,162 - Pristup polju Fld r: int, 4, 1  na liniji 51
INFO  20:27:51,162 - Poziv konstruktora nadklase : Meth Predmet: notype, 0, 1 
   Var this: , 0, 1 
 na liniji 62
INFO  20:27:51,162 - Pristup polju Fld vrsta: char, 3, 1  na liniji 63
INFO  20:27:51,162 - Pristup this parametru Var this: , 0, 1 
INFO  20:27:51,162 - Pristup polju Fld a: int, 4, 1  na liniji 66
INFO  20:27:51,162 - Pristup parametru metode Var a: int, 1, 1  na liniji 66
INFO  20:27:51,162 - Pristup this parametru Var this: , 0, 1 
INFO  20:27:51,162 - Pristup polju Fld b: int, 5, 1  na liniji 66
INFO  20:27:51,162 - Pristup parametru metode Var b: int, 2, 1  na liniji 66
INFO  20:27:51,162 - Pristup this parametru Var this: , 0, 1 
INFO  20:27:51,162 - Pristup polju Fld c: int, 6, 1  na liniji 66
INFO  20:27:51,162 - Pristup parametru metode Var c: int, 3, 1  na liniji 66
INFO  20:27:51,162 - Pristup lokalnoj promenljivi Var z: int, 1, 1  na liniji 70
INFO  20:27:51,162 - Pristup polju Fld a: int, 4, 1  na liniji 70
INFO  20:27:51,163 - Pristup polju Fld b: int, 5, 1  na liniji 70
INFO  20:27:51,163 - Pristup polju Fld c: int, 6, 1  na liniji 70
INFO  20:27:51,163 - Pristup lokalnoj promenljivi Var z: int, 1, 1  na liniji 71
INFO  20:27:51,163 - Pristup polju Fld a: int, 4, 1  na liniji 75
INFO  20:27:51,163 - Pristup polju Fld b: int, 5, 1  na liniji 76
INFO  20:27:51,163 - Pristup polju Fld c: int, 6, 1  na liniji 77
INFO  20:27:51,163 - Pristup parametru metode Var p: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
], 0, 1  na liniji 89
INFO  20:27:51,163 - Poziv metode koja pripada klasi Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
 na liniji 89
INFO  20:27:51,163 - Pristup parametru metode Var p: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
], 0, 1  na liniji 91
INFO  20:27:51,163 - Poziv metode koja pripada klasi Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
 na liniji 91
INFO  20:27:51,164 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 96
INFO  20:27:51,164 - Pristup lokalnoj promenljivi Var s1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 2, 1  na liniji 97
INFO  20:27:51,164 - Pravljenje objekta klase Type Sfera: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 0, 0  na liniji 97
INFO  20:27:51,164 - Pristup lokalnoj promenljivi Var s2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 3, 1  na liniji 98
INFO  20:27:51,164 - Pravljenje objekta klase Type Sfera: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 0, 0  na liniji 98
INFO  20:27:51,165 - Pristup lokalnoj promenljivi Var s3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 4, 1  na liniji 99
INFO  20:27:51,165 - Pravljenje objekta klase Type Sfera: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 0, 0  na liniji 99
INFO  20:27:51,165 - Pristup lokalnoj promenljivi Var k1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 5, 1  na liniji 101
INFO  20:27:51,165 - Pravljenje objekta klase Type Kvadar: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 0, 0  na liniji 101
INFO  20:27:51,165 - Pristup lokalnoj promenljivi Var k2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 6, 1  na liniji 102
INFO  20:27:51,165 - Pravljenje objekta klase Type Kvadar: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 0, 0  na liniji 102
INFO  20:27:51,165 - Pristup lokalnoj promenljivi Var k3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 7, 1  na liniji 103
INFO  20:27:51,165 - Pravljenje objekta klase Type Kvadar: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 0, 0  na liniji 103
INFO  20:27:51,166 - Pristup lokalnoj promenljivi Var s1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 2, 1  na liniji 105
INFO  20:27:51,166 - Poziv metode koja pripada klasi Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
 na liniji 105
INFO  20:27:51,166 - Pristup lokalnoj promenljivi Var s2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 3, 1  na liniji 106
INFO  20:27:51,166 - Poziv metode koja pripada klasi Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
 na liniji 106
INFO  20:27:51,166 - Pristup lokalnoj promenljivi Var s3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 4, 1  na liniji 107
INFO  20:27:51,166 - Poziv metode koja pripada klasi Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
 na liniji 107
INFO  20:27:51,166 - Pristup lokalnoj promenljivi Var k1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 5, 1  na liniji 110
INFO  20:27:51,166 - Poziv metode koja pripada klasi Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
 na liniji 110
INFO  20:27:51,166 - Pristup lokalnoj promenljivi Var k2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 6, 1  na liniji 111
INFO  20:27:51,166 - Poziv metode koja pripada klasi Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
 na liniji 111
INFO  20:27:51,167 - Pristup lokalnoj promenljivi Var k3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 7, 1  na liniji 112
INFO  20:27:51,167 - Poziv metode koja pripada klasi Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
 na liniji 112
INFO  20:27:51,167 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 114
INFO  20:27:51,167 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 114
INFO  20:27:51,167 - Pristup lokalnoj promenljivi Var s1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 2, 1  na liniji 114
INFO  20:27:51,167 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 115
INFO  20:27:51,167 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 115
INFO  20:27:51,167 - Pristup lokalnoj promenljivi Var s2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 3, 1  na liniji 115
INFO  20:27:51,167 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 116
INFO  20:27:51,167 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 116
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var s3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
   Var this: , 0, 1 
   Var r: int, 1, 1 
], 4, 1  na liniji 116
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 117
INFO  20:27:51,168 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 117
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var k1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 5, 1  na liniji 117
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 118
INFO  20:27:51,168 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 118
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var k2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 6, 1  na liniji 118
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 119
INFO  20:27:51,168 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 119
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var k3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
   Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
   Var this: , 0, 1 
Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
   Var z: int, 1, 1 
Meth Q: int, 0, 1 
   Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
   Var this: , 0, 1 
   Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
   Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
   Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
   Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
   Var this: , 0, 1 
   Var a: int, 1, 1 
   Var b: int, 2, 1 
   Var c: int, 3, 1 
], 7, 1  na liniji 119
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var t: int, 8, 1  na liniji 121
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 122
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 124
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 124
INFO  20:27:51,168 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 124
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var t: int, 8, 1  na liniji 124
INFO  20:27:51,168 - Poziv metode koja pripada klasi Meth postaviTezinu: notype, 0, 2 
   Var this: , 0, 1 
   Var tezina: int, 1, 1 
 na liniji 124
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 125
INFO  20:27:51,168 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 126
INFO  20:27:51,168 - Pristup globalnoj promenljivi Var zapreminaS: int, 1, 0  na liniji 128
INFO  20:27:51,168 - Pristup globalnoj promenljivi Var tezinaS: int, 3, 0  na liniji 129
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 130
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 132
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 133
INFO  20:27:51,169 - Pristup globalnoj promenljivi Var zapreminaS: int, 1, 0  na liniji 136
INFO  20:27:51,169 - Pristup globalnoj promenljivi Var zapreminaS: int, 1, 0  na liniji 136
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 136
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 136
INFO  20:27:51,169 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 136
INFO  20:27:51,169 - Poziv metode koja pripada klasi Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
 na liniji 136
INFO  20:27:51,169 - Pristup globalnoj promenljivi Var tezinaS: int, 3, 0  na liniji 137
INFO  20:27:51,169 - Pristup globalnoj promenljivi Var tezinaS: int, 3, 0  na liniji 137
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 137
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 137
INFO  20:27:51,169 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 137
INFO  20:27:51,169 - Poziv metode koja pripada klasi Meth Q: int, 0, 1 
   Var this: , 0, 1 
 na liniji 137
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 138
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 138
INFO  20:27:51,169 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 138
INFO  20:27:51,169 - Poziv globalne metode Meth ispis: notype, 0, 1 
   Var p: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
      Var this: , 0, 1 
      Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
      Var this: , 0, 1 
Meth zapremina: int, 0, 1 
      Var this: , 0, 1 
Meth Q: int, 0, 1 
      Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
      Var this: , 0, 1 
      Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
      Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
      Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
      Var this: , 0, 1 
], 0, 1 
 na liniji 138
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 139
INFO  20:27:51,169 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 140
INFO  20:27:51,169 - Pristup globalnoj promenljivi Var zapreminaK: int, 0, 0  na liniji 143
INFO  20:27:51,170 - Pristup globalnoj promenljivi Var tezinaK: int, 2, 0  na liniji 144
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 145
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 147
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 148
INFO  20:27:51,170 - Pristup globalnoj promenljivi Var zapreminaS: int, 1, 0  na liniji 151
INFO  20:27:51,170 - Pristup globalnoj promenljivi Var zapreminaS: int, 1, 0  na liniji 151
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 151
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 151
INFO  20:27:51,170 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 151
INFO  20:27:51,170 - Poziv metode koja pripada klasi Meth zapremina: int, 0, 1 
   Var this: , 0, 1 
 na liniji 151
INFO  20:27:51,170 - Pristup globalnoj promenljivi Var tezinaS: int, 3, 0  na liniji 152
INFO  20:27:51,170 - Pristup globalnoj promenljivi Var tezinaS: int, 3, 0  na liniji 152
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 152
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 152
INFO  20:27:51,170 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 152
INFO  20:27:51,170 - Poziv metode koja pripada klasi Meth Q: int, 0, 1 
   Var this: , 0, 1 
 na liniji 152
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var predmeti: Arr of Class, 0, 1  na liniji 153
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 153
INFO  20:27:51,170 - Pristup elementu niza Var predmeti: Arr of Class, 0, 1  na liniji 153
INFO  20:27:51,170 - Poziv globalne metode Meth ispis: notype, 0, 1 
   Var p: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
      Var this: , 0, 1 
      Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
      Var this: , 0, 1 
Meth zapremina: int, 0, 1 
      Var this: , 0, 1 
Meth Q: int, 0, 1 
      Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
      Var this: , 0, 1 
      Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
      Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
      Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
      Var this: , 0, 1 
], 0, 1 
 na liniji 153
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 154
INFO  20:27:51,170 - Pristup lokalnoj promenljivi Var i: int, 1, 1  na liniji 155
INFO  20:27:51,170 - Pristup globalnoj promenljivi Var zapreminaS: int, 1, 0  na liniji 157
INFO  20:27:51,170 - Pristup globalnoj promenljivi Var zapreminaK: int, 0, 0  na liniji 158
INFO  20:27:51,170 - Pristup globalnoj promenljivi Var tezinaS: int, 3, 0  na liniji 159
INFO  20:27:51,170 - Pristup globalnoj promenljivi Var tezinaK: int, 2, 0  na liniji 160
INFO  20:27:51,170 - Semanticka analiza uspesno zavrsena.
INFO  20:27:51,171 - =====================SYMBOL TABLE DUMP=========================
Type int: int, -1, -1 
Type char: char, -1, -1 
Con eol: char, 10, 0 
Con null: Class [], 0, 0 
Meth chr: char, 0, 1 
   Var i: int, 0, 1 

Meth ord: int, 0, 1 
   Var ch: char, 0, 1 

Meth len: int, 0, 1 
   Var arr: Arr of notype, 0, 1 

Type bool: , -1, -1 
Prog test_303: notype, 0, 1 
   Con cinilac: int, 4, 0 
   Con delilac: int, 3, 0 
   Type Predmet: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
      Var this: , 0, 1 
      Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
      Var this: , 0, 1 
Meth zapremina: int, 0, 1 
      Var this: , 0, 1 
Meth Q: int, 0, 1 
      Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
      Var this: , 0, 1 
      Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
      Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
      Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
      Var this: , 0, 1 
], 0, 0 
   Type Sfera: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
      Var this: , 0, 1 
      Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
      Var this: , 0, 1 
Meth zapremina: int, 0, 1 
      Var this: , 0, 1 
      Var z: int, 1, 1 
Meth Q: int, 0, 1 
      Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
      Var this: , 0, 1 
      Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
      Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
      Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
      Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
      Var this: , 0, 1 
      Var r: int, 1, 1 
], 0, 0 
   Type Kvadar: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
      Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
      Var this: , 0, 1 
      Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
      Var this: , 0, 1 
Meth zapremina: int, 0, 1 
      Var this: , 0, 1 
      Var z: int, 1, 1 
Meth Q: int, 0, 1 
      Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
      Var this: , 0, 1 
      Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
      Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
      Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
      Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
      Var this: , 0, 1 
      Var a: int, 1, 1 
      Var b: int, 2, 1 
      Var c: int, 3, 1 
], 0, 0 
   Var zapreminaK: int, 0, 0 
   Var zapreminaS: int, 1, 0 
   Var tezinaK: int, 2, 0 
   Var tezinaS: int, 3, 0 
   Meth ispis: notype, 0, 1 
      Var p: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Predmet: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
], 0, 1 

   Meth main: notype, 0, 0 
      Var predmeti: Arr of Class, 0, 1 
      Var i: int, 1, 1 
      Var s1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
         Var this: , 0, 1 
         Var r: int, 1, 1 
], 2, 1 
      Var s2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
         Var this: , 0, 1 
         Var r: int, 1, 1 
], 3, 1 
      Var s3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Sfera: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Fld r: int, 4, 1 Meth postaviPoluprecnik: notype, 0, 2 
         Var this: , 0, 1 
         Var r: int, 1, 1 
], 4, 1 
      Var k1: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
         Var this: , 0, 1 
         Var a: int, 1, 1 
         Var b: int, 2, 1 
         Var c: int, 3, 1 
], 5, 1 
      Var k2: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
         Var this: , 0, 1 
         Var a: int, 1, 1 
         Var b: int, 2, 1 
         Var c: int, 3, 1 
], 6, 1 
      Var k3: Class [Fld tezina: int, 1, 1 Fld koefTezine: int, 2, 1 Fld vrsta: char, 3, 1 Meth Kvadar: notype, 0, 1 
         Var this: , 0, 1 
Meth postaviTezinu: notype, 0, 2 
         Var this: , 0, 1 
         Var tezina: int, 1, 1 
Meth ucitajTezinu: notype, 0, 1 
         Var this: , 0, 1 
Meth zapremina: int, 0, 1 
         Var this: , 0, 1 
         Var z: int, 1, 1 
Meth Q: int, 0, 1 
         Var this: , 0, 1 
Meth postaviVrstu: notype, 0, 2 
         Var this: , 0, 1 
         Var vrsta: char, 1, 1 
Meth dohvVrstu: char, 0, 1 
         Var this: , 0, 1 
Meth dohvTezinu: int, 0, 1 
         Var this: , 0, 1 
Meth ispisi: notype, 0, 1 
         Var this: , 0, 1 
Fld a: int, 4, 1 Fld b: int, 5, 1 Fld c: int, 6, 1 Meth postaviStranice: notype, 0, 4 
         Var this: , 0, 1 
         Var a: int, 1, 1 
         Var b: int, 2, 1 
         Var c: int, 3, 1 
], 7, 1 
      Var t: int, 8, 1 



INFO  20:27:51,182 - Objektni fajl za test/test.mj uspesno generisan kao test/program.obj
